// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License"). You may
// not use this file except in compliance with the License. A copy of the
// License is located at
//
//     http://aws.amazon.com/apache2.0/
//
// or in the "license" file accompanying this file. This file is distributed
// on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
// express or implied. See the License for the specific language governing
// permissions and limitations under the License.

// Code generated by ack-generate. DO NOT EDIT.

package v1alpha1

import (
	ackv1alpha1 "github.com/aws-controllers-k8s/runtime/apis/core/v1alpha1"
	"github.com/aws/aws-sdk-go/aws"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// Hack to avoid import errors during build...
var (
	_ = &metav1.Time{}
	_ = &aws.JSONValue{}
	_ = ackv1alpha1.AWSAccountID("")
)

// Container for parameters required to enable all machine learning features.
type AIMLOptionsInput struct {
	// Container for parameters required to enable the natural language query generation
	// feature.
	NATuralLanguageQueryGenerationOptions *NATuralLanguageQueryGenerationOptionsInput `json:"naturalLanguageQueryGenerationOptions,omitempty"`
}

// Container for parameters representing the state of machine learning features
// on the specified domain.
type AIMLOptionsOutput struct {
	// Container for parameters representing the state of the natural language query
	// generation feature on the specified domain.
	NATuralLanguageQueryGenerationOptions *NATuralLanguageQueryGenerationOptionsOutput `json:"naturalLanguageQueryGenerationOptions,omitempty"`
}

// The status of machine learning options on the specified domain.
type AIMLOptionsStatus struct {
	// Container for parameters representing the state of machine learning features
	// on the specified domain.
	Options *AIMLOptionsOutput `json:"options,omitempty"`
}

// Information about an Amazon OpenSearch Service domain.
type AWSDomainInformation struct {
	// The name of an OpenSearch Service domain. Domain names are unique across
	// the domains owned by an account within an Amazon Web Services Region.
	DomainName *string `json:"domainName,omitempty"`
}

// The configured access rules for the domain's search endpoint, and the current
// status of those rules.
type AccessPoliciesStatus struct {
	// Access policy rules for an Amazon OpenSearch Service domain endpoint. For
	// more information, see Configuring access policies (https://docs.aws.amazon.com/opensearch-service/latest/developerguide/createupdatedomains.html#createdomain-configure-access-policies).
	// The maximum size of a policy document is 100 KB.
	Options *string `json:"options,omitempty"`
}

// Status of the advanced options for the specified domain. The following options
// are available:
//
//   - "rest.action.multi.allow_explicit_index": "true" | "false" - Note the
//     use of a string rather than a boolean. Specifies whether explicit references
//     to indexes are allowed inside the body of HTTP requests. If you want to
//     configure access policies for domain sub-resources, such as specific indexes
//     and domain APIs, you must disable this property. Default is true.
//
//   - "indices.fielddata.cache.size": "80" - Note the use of a string rather
//     than a boolean. Specifies the percentage of heap space allocated to field
//     data. Default is unbounded.
//
//   - "indices.query.bool.max_clause_count": "1024" - Note the use of a string
//     rather than a boolean. Specifies the maximum number of clauses allowed
//     in a Lucene boolean query. Default is 1,024. Queries with more than the
//     permitted number of clauses result in a TooManyClauses error.
//
//   - "override_main_response_version": "true" | "false" - Note the use of
//     a string rather than a boolean. Specifies whether the domain reports its
//     version as 7.10 to allow Elasticsearch OSS clients and plugins to continue
//     working with it. Default is false when creating a domain and true when
//     upgrading a domain.
//
// For more information, see Advanced cluster parameters (https://docs.aws.amazon.com/opensearch-service/latest/developerguide/createupdatedomains.html#createdomain-configure-advanced-options).
type AdvancedOptionsStatus struct {
	// Exposes native OpenSearch configuration values from opensearch.yml. The following
	// advanced options are available:
	//
	//    * Allows references to indexes in an HTTP request body. Must be false
	//    when configuring access to individual sub-resources. Default is true.
	//
	//    * Specifies the percentage of heap space allocated to field data. Default
	//    is unbounded.
	//
	// For more information, see Advanced cluster parameters (https://docs.aws.amazon.com/opensearch-service/latest/developerguide/createupdatedomains.html#createdomain-configure-advanced-options).
	Options map[string]*string `json:"options,omitempty"`
}

// Container for fine-grained access control settings.
type AdvancedSecurityOptions struct {
	AnonymousAuthDisableDate    *metav1.Time `json:"anonymousAuthDisableDate,omitempty"`
	AnonymousAuthEnabled        *bool        `json:"anonymousAuthEnabled,omitempty"`
	Enabled                     *bool        `json:"enabled,omitempty"`
	InternalUserDatabaseEnabled *bool        `json:"internalUserDatabaseEnabled,omitempty"`
	// Describes the JWT options configured for the domain.
	JWTOptions *JWTOptionsOutput `json:"jwtOptions,omitempty"`
	// Describes the SAML application configured for the domain.
	SAMLOptions *SAMLOptionsOutput `json:"sAMLOptions,omitempty"`
}

// Options for enabling and configuring fine-grained access control. For more
// information, see Fine-grained access control in Amazon OpenSearch Service
// (https://docs.aws.amazon.com/opensearch-service/latest/developerguide/fgac.html).
type AdvancedSecurityOptionsInput struct {
	AnonymousAuthEnabled        *bool `json:"anonymousAuthEnabled,omitempty"`
	Enabled                     *bool `json:"enabled,omitempty"`
	InternalUserDatabaseEnabled *bool `json:"internalUserDatabaseEnabled,omitempty"`
	// The JWT authentication and authorization configuration for an Amazon OpenSearch
	// Service domain.
	JWTOptions *JWTOptionsInput `json:"jwtOptions,omitempty"`
	// Credentials for the master user for a domain.
	MasterUserOptions *MasterUserOptions `json:"masterUserOptions,omitempty"`
	// The SAML authentication configuration for an Amazon OpenSearch Service domain.
	SAMLOptions *SAMLOptionsInput `json:"sAMLOptions,omitempty"`
}

// The status of fine-grained access control settings for a domain.
type AdvancedSecurityOptionsStatus struct {
	// Container for fine-grained access control settings.
	Options *AdvancedSecurityOptions `json:"options,omitempty"`
}

// Basic information of the OpenSearch Application.
type ApplicationSummary struct {
	// The Amazon Resource Name (ARN) of the domain. See Identifiers for IAM Entities
	// (https://docs.aws.amazon.com/IAM/latest/UserGuide/index.html) in Using Amazon
	// Web Services Identity and Access Management for more information.
	ARN      *string `json:"arn,omitempty"`
	Endpoint *string `json:"endpoint,omitempty"`
}

// Information about an Amazon Web Services account or service that has access
// to an Amazon OpenSearch Service domain through the use of an interface VPC
// endpoint.
type AuthorizedPrincipal struct {
	Principal *string `json:"principal,omitempty"`
}

// This object is deprecated. Use the domain's off-peak window (https://docs.aws.amazon.com/opensearch-service/latest/developerguide/off-peak.html)
// to schedule Auto-Tune optimizations. For migration instructions, see Migrating
// from Auto-Tune maintenance windows (https://docs.aws.amazon.com/opensearch-service/latest/developerguide/off-peak.html#off-peak-migrate).
//
// The Auto-Tune maintenance schedule. For more information, see Auto-Tune for
// Amazon OpenSearch Service (https://docs.aws.amazon.com/opensearch-service/latest/developerguide/auto-tune.html).
type AutoTuneMaintenanceSchedule struct {
	CronExpressionForRecurrence *string `json:"cronExpressionForRecurrence,omitempty"`
	// The duration of a maintenance schedule. For more information, see Auto-Tune
	// for Amazon OpenSearch Service (https://docs.aws.amazon.com/opensearch-service/latest/developerguide/auto-tune.html).
	Duration *Duration    `json:"duration,omitempty"`
	StartAt  *metav1.Time `json:"startAt,omitempty"`
}

// Auto-Tune settings when updating a domain. For more information, see Auto-Tune
// for Amazon OpenSearch Service (https://docs.aws.amazon.com/opensearch-service/latest/developerguide/auto-tune.html).
type AutoTuneOptions struct {
	// The Auto-Tune desired state. Valid values are ENABLED and DISABLED.
	DesiredState         *string                        `json:"desiredState,omitempty"`
	MaintenanceSchedules []*AutoTuneMaintenanceSchedule `json:"maintenanceSchedules,omitempty"`
	UseOffPeakWindow     *bool                          `json:"useOffPeakWindow,omitempty"`
}

// Options for configuring Auto-Tune. For more information, see Auto-Tune for
// Amazon OpenSearch Service (https://docs.aws.amazon.com/opensearch-service/latest/developerguide/auto-tune.html)
type AutoTuneOptionsInput struct {
	// The Auto-Tune desired state. Valid values are ENABLED and DISABLED.
	DesiredState         *string                        `json:"desiredState,omitempty"`
	MaintenanceSchedules []*AutoTuneMaintenanceSchedule `json:"maintenanceSchedules,omitempty"`
	UseOffPeakWindow     *bool                          `json:"useOffPeakWindow,omitempty"`
}

// The Auto-Tune settings for a domain, displayed when enabling or disabling
// Auto-Tune.
type AutoTuneOptionsOutput struct {
	ErrorMessage *string `json:"errorMessage,omitempty"`
	// The Auto-Tune state for the domain. For valid states see Auto-Tune for Amazon
	// OpenSearch Service (https://docs.aws.amazon.com/opensearch-service/latest/developerguide/auto-tune.html).
	State            *string `json:"state,omitempty"`
	UseOffPeakWindow *bool   `json:"useOffPeakWindow,omitempty"`
}

// The current status of Auto-Tune for the domain. For more information, see
// Auto-Tune for Amazon OpenSearch Service (https://docs.aws.amazon.com/opensearch-service/latest/developerguide/auto-tune.html).
type AutoTuneStatus struct {
	CreationDate    *metav1.Time `json:"creationDate,omitempty"`
	ErrorMessage    *string      `json:"errorMessage,omitempty"`
	PendingDeletion *bool        `json:"pendingDeletion,omitempty"`
	// The Auto-Tune state for the domain. For valid states see Auto-Tune for Amazon
	// OpenSearch Service (https://docs.aws.amazon.com/opensearch-service/latest/developerguide/auto-tune.html).
	State      *string      `json:"state,omitempty"`
	UpdateDate *metav1.Time `json:"updateDate,omitempty"`
}

// A property change that was cancelled for an Amazon OpenSearch Service domain.
type CancelledChangeProperty struct {
	ActiveValue    *string `json:"activeValue,omitempty"`
	CancelledValue *string `json:"cancelledValue,omitempty"`
	PropertyName   *string `json:"propertyName,omitempty"`
}

// Container for information about a configuration change happening on a domain.
type ChangeProgressDetails struct {
	ChangeID           *string      `json:"changeID,omitempty"`
	ConfigChangeStatus *string      `json:"configChangeStatus,omitempty"`
	InitiatedBy        *string      `json:"initiatedBy,omitempty"`
	LastUpdatedTime    *metav1.Time `json:"lastUpdatedTime,omitempty"`
	Message            *string      `json:"message,omitempty"`
	StartTime          *metav1.Time `json:"startTime,omitempty"`
}

// The progress details of a specific domain configuration change.
type ChangeProgressStatusDetails struct {
	ChangeID            *string      `json:"changeID,omitempty"`
	CompletedProperties []*string    `json:"completedProperties,omitempty"`
	ConfigChangeStatus  *string      `json:"configChangeStatus,omitempty"`
	InitiatedBy         *string      `json:"initiatedBy,omitempty"`
	LastUpdatedTime     *metav1.Time `json:"lastUpdatedTime,omitempty"`
	PendingProperties   []*string    `json:"pendingProperties,omitempty"`
	StartTime           *metav1.Time `json:"startTime,omitempty"`
}

// Container for the cluster configuration of an OpenSearch Service domain.
// For more information, see Creating and managing Amazon OpenSearch Service
// domains (https://docs.aws.amazon.com/opensearch-service/latest/developerguide/createupdatedomains.html).
type ClusterConfig struct {
	// Container for the parameters required to enable cold storage for an OpenSearch
	// Service domain. For more information, see Cold storage for Amazon OpenSearch
	// Service (https://docs.aws.amazon.com/opensearch-service/latest/developerguide/cold-storage.html).
	ColdStorageOptions        *ColdStorageOptions `json:"coldStorageOptions,omitempty"`
	DedicatedMasterCount      *int64              `json:"dedicatedMasterCount,omitempty"`
	DedicatedMasterEnabled    *bool               `json:"dedicatedMasterEnabled,omitempty"`
	DedicatedMasterType       *string             `json:"dedicatedMasterType,omitempty"`
	InstanceCount             *int64              `json:"instanceCount,omitempty"`
	InstanceType              *string             `json:"instanceType,omitempty"`
	MultiAZWithStandbyEnabled *bool               `json:"multiAZWithStandbyEnabled,omitempty"`
	WarmCount                 *int64              `json:"warmCount,omitempty"`
	WarmEnabled               *bool               `json:"warmEnabled,omitempty"`
	WarmType                  *string             `json:"warmType,omitempty"`
	// The zone awareness configuration for an Amazon OpenSearch Service domain.
	ZoneAwarenessConfig  *ZoneAwarenessConfig `json:"zoneAwarenessConfig,omitempty"`
	ZoneAwarenessEnabled *bool                `json:"zoneAwarenessEnabled,omitempty"`
}

// The cluster configuration status for a domain.
type ClusterConfigStatus struct {
	// Container for the cluster configuration of an OpenSearch Service domain.
	// For more information, see Creating and managing Amazon OpenSearch Service
	// domains (https://docs.aws.amazon.com/opensearch-service/latest/developerguide/createupdatedomains.html).
	Options *ClusterConfig `json:"options,omitempty"`
}

// Container for the parameters required to enable Cognito authentication for
// an OpenSearch Service domain. For more information, see Configuring Amazon
// Cognito authentication for OpenSearch Dashboards (https://docs.aws.amazon.com/opensearch-service/latest/developerguide/cognito-auth.html).
type CognitoOptions struct {
	Enabled        *bool   `json:"enabled,omitempty"`
	IdentityPoolID *string `json:"identityPoolID,omitempty"`
	RoleARN        *string `json:"roleARN,omitempty"`
	UserPoolID     *string `json:"userPoolID,omitempty"`
}

// The status of the Cognito options for the specified domain.
type CognitoOptionsStatus struct {
	// Container for the parameters required to enable Cognito authentication for
	// an OpenSearch Service domain. For more information, see Configuring Amazon
	// Cognito authentication for OpenSearch Dashboards (https://docs.aws.amazon.com/opensearch-service/latest/developerguide/cognito-auth.html).
	Options *CognitoOptions `json:"options,omitempty"`
}

// Container for the parameters required to enable cold storage for an OpenSearch
// Service domain. For more information, see Cold storage for Amazon OpenSearch
// Service (https://docs.aws.amazon.com/opensearch-service/latest/developerguide/cold-storage.html).
type ColdStorageOptions struct {
	Enabled *bool `json:"enabled,omitempty"`
}

// A map of OpenSearch or Elasticsearch versions and the versions you can upgrade
// them to.
type CompatibleVersionsMap struct {
	SourceVersion *string `json:"sourceVersion,omitempty"`
}

// Data sources that are associated with an OpenSearch Application.
type DataSource struct {
	// The Amazon Resource Name (ARN) of the domain. See Identifiers for IAM Entities
	// (https://docs.aws.amazon.com/IAM/latest/UserGuide/index.html) in Using Amazon
	// Web Services Identity and Access Management for more information.
	DataSourceARN *string `json:"dataSourceARN,omitempty"`
}

// The configuration details for a data source that can be directly queried.
type DirectQueryDataSource struct {
	DataSourceARN *string `json:"dataSourceARN,omitempty"`
	// A list of tags attached to a domain.
	TagList []*Tag `json:"tagList,omitempty"`
}

// Container for the configuration of an OpenSearch Service domain.
type DomainConfig struct {
	// Container for information about a configuration change happening on a domain.
	ChangeProgressDetails *ChangeProgressDetails `json:"changeProgressDetails,omitempty"`
	ModifyingProperties   []*ModifyingProperties `json:"modifyingProperties,omitempty"`
}

// Options to configure a custom endpoint for an OpenSearch Service domain.
type DomainEndpointOptions struct {
	CustomEndpoint *string `json:"customEndpoint,omitempty"`
	// The Amazon Resource Name (ARN) of the domain. See Identifiers for IAM Entities
	// (https://docs.aws.amazon.com/IAM/latest/UserGuide/index.html) in Using Amazon
	// Web Services Identity and Access Management for more information.
	CustomEndpointCertificateARN *string `json:"customEndpointCertificateARN,omitempty"`
	CustomEndpointEnabled        *bool   `json:"customEndpointEnabled,omitempty"`
	EnforceHTTPS                 *bool   `json:"enforceHTTPS,omitempty"`
	TLSSecurityPolicy            *string `json:"tlsSecurityPolicy,omitempty"`
}

// The configured endpoint options for a domain and their current status.
type DomainEndpointOptionsStatus struct {
	// Options to configure a custom endpoint for an OpenSearch Service domain.
	Options *DomainEndpointOptions `json:"options,omitempty"`
}

// Information about an OpenSearch Service domain.
type DomainInfo struct {
	// The name of an OpenSearch Service domain. Domain names are unique across
	// the domains owned by an account within an Amazon Web Services Region.
	DomainName *string `json:"domainName,omitempty"`
}

// Container for the domain maintenance details.
type DomainMaintenanceDetails struct {
	CreatedAt *metav1.Time `json:"createdAt,omitempty"`
	// The name of an OpenSearch Service domain. Domain names are unique across
	// the domains owned by an account within an Amazon Web Services Region.
	DomainName *string      `json:"domainName,omitempty"`
	UpdatedAt  *metav1.Time `json:"updatedAt,omitempty"`
}

// Container for information about nodes on the domain.
type DomainNodesStatus struct {
	InstanceType *string `json:"instanceType,omitempty"`
	// The type of EBS volume that a domain uses. For more information, see Configuring
	// EBS-based storage (https://docs.aws.amazon.com/opensearch-service/latest/developerguide/opensearch-createupdatedomains.html#opensearch-createdomain-configure-ebs).
	StorageVolumeType *string `json:"storageVolumeType,omitempty"`
}

// Information about a package that is associated with a domain. For more information,
// see Custom packages for Amazon OpenSearch Service (https://docs.aws.amazon.com/opensearch-service/latest/developerguide/custom-packages.html).
type DomainPackageDetails struct {
	// The name of an OpenSearch Service domain. Domain names are unique across
	// the domains owned by an account within an Amazon Web Services Region.
	DomainName *string `json:"domainName,omitempty"`
}

// The current status of an OpenSearch Service domain.
type DomainStatus_SDK struct {
	// Container for parameters representing the state of machine learning features
	// on the specified domain.
	AIMLOptions *AIMLOptionsOutput `json:"aimlOptions,omitempty"`
	// The Amazon Resource Name (ARN) of the domain. See Identifiers for IAM Entities
	// (https://docs.aws.amazon.com/IAM/latest/UserGuide/index.html) in Using Amazon
	// Web Services Identity and Access Management for more information.
	ARN *string `json:"arn,omitempty"`
	// Access policy rules for an Amazon OpenSearch Service domain endpoint. For
	// more information, see Configuring access policies (https://docs.aws.amazon.com/opensearch-service/latest/developerguide/createupdatedomains.html#createdomain-configure-access-policies).
	// The maximum size of a policy document is 100 KB.
	AccessPolicies *string `json:"accessPolicies,omitempty"`
	// Exposes native OpenSearch configuration values from opensearch.yml. The following
	// advanced options are available:
	//
	//    * Allows references to indexes in an HTTP request body. Must be false
	//    when configuring access to individual sub-resources. Default is true.
	//
	//    * Specifies the percentage of heap space allocated to field data. Default
	//    is unbounded.
	//
	// For more information, see Advanced cluster parameters (https://docs.aws.amazon.com/opensearch-service/latest/developerguide/createupdatedomains.html#createdomain-configure-advanced-options).
	AdvancedOptions map[string]*string `json:"advancedOptions,omitempty"`
	// Container for fine-grained access control settings.
	AdvancedSecurityOptions *AdvancedSecurityOptions `json:"advancedSecurityOptions,omitempty"`
	// The Auto-Tune settings for a domain, displayed when enabling or disabling
	// Auto-Tune.
	AutoTuneOptions *AutoTuneOptionsOutput `json:"autoTuneOptions,omitempty"`
	// Container for information about a configuration change happening on a domain.
	ChangeProgressDetails *ChangeProgressDetails `json:"changeProgressDetails,omitempty"`
	// Container for the cluster configuration of an OpenSearch Service domain.
	// For more information, see Creating and managing Amazon OpenSearch Service
	// domains (https://docs.aws.amazon.com/opensearch-service/latest/developerguide/createupdatedomains.html).
	ClusterConfig *ClusterConfig `json:"clusterConfig,omitempty"`
	// Container for the parameters required to enable Cognito authentication for
	// an OpenSearch Service domain. For more information, see Configuring Amazon
	// Cognito authentication for OpenSearch Dashboards (https://docs.aws.amazon.com/opensearch-service/latest/developerguide/cognito-auth.html).
	CognitoOptions *CognitoOptions `json:"cognitoOptions,omitempty"`
	Created        *bool           `json:"created,omitempty"`
	Deleted        *bool           `json:"deleted,omitempty"`
	// Options to configure a custom endpoint for an OpenSearch Service domain.
	DomainEndpointOptions        *DomainEndpointOptions `json:"domainEndpointOptions,omitempty"`
	DomainEndpointV2HostedZoneID *string                `json:"domainEndpointV2HostedZoneID,omitempty"`
	// Unique identifier for an OpenSearch Service domain.
	DomainID *string `json:"domainID,omitempty"`
	// The name of an OpenSearch Service domain. Domain names are unique across
	// the domains owned by an account within an Amazon Web Services Region.
	DomainName             *string `json:"domainName,omitempty"`
	DomainProcessingStatus *string `json:"domainProcessingStatus,omitempty"`
	// Container for the parameters required to enable EBS-based storage for an
	// OpenSearch Service domain.
	EBSOptions *EBSOptions `json:"ebsOptions,omitempty"`
	// Specifies whether the domain should encrypt data at rest, and if so, the
	// Key Management Service (KMS) key to use. Can only be used when creating a
	// new domain or enabling encryption at rest for the first time on an existing
	// domain. You can't modify this parameter after it's already been specified.
	EncryptionAtRestOptions *EncryptionAtRestOptions `json:"encryptionAtRestOptions,omitempty"`
	// The domain endpoint to which index and search requests are submitted. For
	// example, search-imdb-movies-oopcnjfn6ugo.eu-west-1.es.amazonaws.com or doc-imdb-movies-oopcnjfn6u.eu-west-1.es.amazonaws.com.
	Endpoint *string `json:"endpoint,omitempty"`
	// The domain endpoint to which index and search requests are submitted. For
	// example, search-imdb-movies-oopcnjfn6ugo.eu-west-1.es.amazonaws.com or doc-imdb-movies-oopcnjfn6u.eu-west-1.es.amazonaws.com.
	EndpointV2           *string                         `json:"endpointV2,omitempty"`
	Endpoints            map[string]*string              `json:"endpoints,omitempty"`
	EngineVersion        *string                         `json:"engineVersion,omitempty"`
	IPAddressType        *string                         `json:"ipAddressType,omitempty"`
	LogPublishingOptions map[string]*LogPublishingOption `json:"logPublishingOptions,omitempty"`
	ModifyingProperties  []*ModifyingProperties          `json:"modifyingProperties,omitempty"`
	// Enables or disables node-to-node encryption. For more information, see Node-to-node
	// encryption for Amazon OpenSearch Service (https://docs.aws.amazon.com/opensearch-service/latest/developerguide/ntn.html).
	NodeToNodeEncryptionOptions *NodeToNodeEncryptionOptions `json:"nodeToNodeEncryptionOptions,omitempty"`
	// Options for a domain's off-peak window (https://docs.aws.amazon.com/opensearch-service/latest/APIReference/API_OffPeakWindow.html),
	// during which OpenSearch Service can perform mandatory configuration changes
	// on the domain.
	OffPeakWindowOptions *OffPeakWindowOptions `json:"offPeakWindowOptions,omitempty"`
	Processing           *bool                 `json:"processing,omitempty"`
	// The current status of the service software for an Amazon OpenSearch Service
	// domain. For more information, see Service software updates in Amazon OpenSearch
	// Service (https://docs.aws.amazon.com/opensearch-service/latest/developerguide/service-software.html).
	ServiceSoftwareOptions *ServiceSoftwareOptions `json:"serviceSoftwareOptions,omitempty"`
	// The time, in UTC format, when OpenSearch Service takes a daily automated
	// snapshot of the specified domain. Default is 0 hours.
	SnapshotOptions *SnapshotOptions `json:"snapshotOptions,omitempty"`
	// Options for configuring service software updates for a domain.
	SoftwareUpdateOptions *SoftwareUpdateOptions `json:"softwareUpdateOptions,omitempty"`
	UpgradeProcessing     *bool                  `json:"upgradeProcessing,omitempty"`
	// Information about the subnets and security groups for an Amazon OpenSearch
	// Service domain provisioned within a virtual private cloud (VPC). For more
	// information, see Launching your Amazon OpenSearch Service domains using a
	// VPC (https://docs.aws.amazon.com/opensearch-service/latest/developerguide/vpc.html).
	// This information only exists if the domain was created with VPCOptions.
	VPCOptions *VPCDerivedInfo `json:"vpcOptions,omitempty"`
}

// Information about the progress of a pre-upgrade dry run analysis.
type DryRunProgressStatus struct {
	CreationDate *string `json:"creationDate,omitempty"`
	DryRunID     *string `json:"dryRunID,omitempty"`
	DryRunStatus *string `json:"dryRunStatus,omitempty"`
	UpdateDate   *string `json:"updateDate,omitempty"`
}

// Results of a dry run performed in an update domain request.
type DryRunResults struct {
	Message *string `json:"message,omitempty"`
}

// The duration of a maintenance schedule. For more information, see Auto-Tune
// for Amazon OpenSearch Service (https://docs.aws.amazon.com/opensearch-service/latest/developerguide/auto-tune.html).
type Duration struct {
	// The unit of a maintenance schedule duration. Valid value is HOUR.
	Unit *string `json:"unit,omitempty"`
	// Integer that specifies the value of a maintenance schedule duration.
	Value *int64 `json:"value,omitempty"`
}

// Container for the parameters required to enable EBS-based storage for an
// OpenSearch Service domain.
type EBSOptions struct {
	EBSEnabled *bool  `json:"ebsEnabled,omitempty"`
	IOPS       *int64 `json:"iops,omitempty"`
	Throughput *int64 `json:"throughput,omitempty"`
	VolumeSize *int64 `json:"volumeSize,omitempty"`
	// The type of EBS volume that a domain uses. For more information, see Configuring
	// EBS-based storage (https://docs.aws.amazon.com/opensearch-service/latest/developerguide/opensearch-createupdatedomains.html#opensearch-createdomain-configure-ebs).
	VolumeType *string `json:"volumeType,omitempty"`
}

// The status of the EBS options for the specified OpenSearch Service domain.
type EBSOptionsStatus struct {
	// Container for the parameters required to enable EBS-based storage for an
	// OpenSearch Service domain.
	Options *EBSOptions `json:"options,omitempty"`
}

// Specifies whether the domain should encrypt data at rest, and if so, the
// Key Management Service (KMS) key to use. Can only be used when creating a
// new domain or enabling encryption at rest for the first time on an existing
// domain. You can't modify this parameter after it's already been specified.
type EncryptionAtRestOptions struct {
	Enabled  *bool   `json:"enabled,omitempty"`
	KMSKeyID *string `json:"kmsKeyID,omitempty"`
}

// Status of the encryption at rest options for the specified OpenSearch Service
// domain.
type EncryptionAtRestOptionsStatus struct {
	// Specifies whether the domain should encrypt data at rest, and if so, the
	// Key Management Service (KMS) key to use. Can only be used when creating a
	// new domain or enabling encryption at rest for the first time on an existing
	// domain. You can't modify this parameter after it's already been specified.
	Options *EncryptionAtRestOptions `json:"options,omitempty"`
}

// Settings for IAM Identity Center for an OpenSearch Application.
type IAMIdentityCenterOptions struct {
	Enabled *bool `json:"enabled,omitempty"`
	// The Amazon Resource Name (ARN) of the domain. See Identifiers for IAM Entities
	// (https://docs.aws.amazon.com/IAM/latest/UserGuide/index.html) in Using Amazon
	// Web Services Identity and Access Management for more information.
	IAMIdentityCenterApplicationARN *string `json:"iamIdentityCenterApplicationARN,omitempty"`
	// The Amazon Resource Name (ARN) of the domain. See Identifiers for IAM Entities
	// (https://docs.aws.amazon.com/IAM/latest/UserGuide/index.html) in Using Amazon
	// Web Services Identity and Access Management for more information.
	IAMIdentityCenterInstanceARN           *string `json:"iamIdentityCenterInstanceARN,omitempty"`
	IAMRoleForIdentityCenterApplicationARN *string `json:"iamRoleForIdentityCenterApplicationARN,omitempty"`
}

// Settings for IAM Identity Center.
type IAMIdentityCenterOptionsInput struct {
	Enabled *bool `json:"enabled,omitempty"`
	// The Amazon Resource Name (ARN) of the domain. See Identifiers for IAM Entities
	// (https://docs.aws.amazon.com/IAM/latest/UserGuide/index.html) in Using Amazon
	// Web Services Identity and Access Management for more information.
	IAMIdentityCenterInstanceARN           *string `json:"iamIdentityCenterInstanceARN,omitempty"`
	IAMRoleForIdentityCenterApplicationARN *string `json:"iamRoleForIdentityCenterApplicationARN,omitempty"`
}

// The IP address type status for the domain.
type IPAddressTypeStatus struct {
	Options *string `json:"options,omitempty"`
}

// Container for IAM Identity Center Options settings.
type IdentityCenterOptions struct {
	EnabledAPIAccess *bool `json:"enabledAPIAccess,omitempty"`
}

// Container for IAM Identity Center Options settings.
type IdentityCenterOptionsInput struct {
	EnabledAPIAccess *bool `json:"enabledAPIAccess,omitempty"`
}

// Lists all instance types and available features for a given OpenSearch or
// Elasticsearch version.
type InstanceTypeDetails struct {
	AdvancedSecurityEnabled *bool   `json:"advancedSecurityEnabled,omitempty"`
	AppLogsEnabled          *bool   `json:"appLogsEnabled,omitempty"`
	CognitoEnabled          *bool   `json:"cognitoEnabled,omitempty"`
	EncryptionEnabled       *bool   `json:"encryptionEnabled,omitempty"`
	InstanceType            *string `json:"instanceType,omitempty"`
	WarmEnabled             *bool   `json:"warmEnabled,omitempty"`
}

// The JWT authentication and authorization configuration for an Amazon OpenSearch
// Service domain.
type JWTOptionsInput struct {
	Enabled    *bool   `json:"enabled,omitempty"`
	PublicKey  *string `json:"publicKey,omitempty"`
	RolesKey   *string `json:"rolesKey,omitempty"`
	SubjectKey *string `json:"subjectKey,omitempty"`
}

// Describes the JWT options configured for the domain.
type JWTOptionsOutput struct {
	Enabled    *bool   `json:"enabled,omitempty"`
	PublicKey  *string `json:"publicKey,omitempty"`
	RolesKey   *string `json:"rolesKey,omitempty"`
	SubjectKey *string `json:"subjectKey,omitempty"`
}

// The configuration parameters to enable access to the key store required by
// the package.
type KeyStoreAccessOption struct {
	KeyAccessRoleARN      *string `json:"keyAccessRoleARN,omitempty"`
	KeyStoreAccessEnabled *bool   `json:"keyStoreAccessEnabled,omitempty"`
}

// Specifies whether the Amazon OpenSearch Service domain publishes the OpenSearch
// application and slow logs to Amazon CloudWatch. For more information, see
// Monitoring OpenSearch logs with Amazon CloudWatch Logs (https://docs.aws.amazon.com/opensearch-service/latest/developerguide/createdomain-configure-slow-logs.html).
//
// After you enable log publishing, you still have to enable the collection
// of slow logs using the OpenSearch REST API.
type LogPublishingOption struct {
	// ARN of the Cloudwatch log group to publish logs to.
	CloudWatchLogsLogGroupARN *string `json:"cloudWatchLogsLogGroupARN,omitempty"`
	Enabled                   *bool   `json:"enabled,omitempty"`
}

// The configured log publishing options for the domain and their current status.
type LogPublishingOptionsStatus struct {
	Options map[string]*LogPublishingOption `json:"options,omitempty"`
}

// Credentials for the master user for a domain.
type MasterUserOptions struct {
	// The Amazon Resource Name (ARN) of the domain. See Identifiers for IAM Entities
	// (https://docs.aws.amazon.com/IAM/latest/UserGuide/index.html) in Using Amazon
	// Web Services Identity and Access Management for more information.
	MasterUserARN      *string                         `json:"masterUserARN,omitempty"`
	MasterUserName     *string                         `json:"masterUserName,omitempty"`
	MasterUserPassword *ackv1alpha1.SecretKeyReference `json:"masterUserPassword,omitempty"`
}

// Information about the domain properties that are currently being modified.
type ModifyingProperties struct {
	ActiveValue  *string `json:"activeValue,omitempty"`
	Name         *string `json:"name,omitempty"`
	PendingValue *string `json:"pendingValue,omitempty"`
	ValueType    *string `json:"valueType,omitempty"`
}

// Container for parameters required to enable the natural language query generation
// feature.
type NATuralLanguageQueryGenerationOptionsInput struct {
	DesiredState *string `json:"desiredState,omitempty"`
}

// Container for parameters representing the state of the natural language query
// generation feature on the specified domain.
type NATuralLanguageQueryGenerationOptionsOutput struct {
	CurrentState *string `json:"currentState,omitempty"`
	DesiredState *string `json:"desiredState,omitempty"`
}

// Container for specifying configuration of any node type.
type NodeConfig struct {
	Count   *int64  `json:"count,omitempty"`
	Enabled *bool   `json:"enabled,omitempty"`
	Type    *string `json:"type_,omitempty"`
}

// Enables or disables node-to-node encryption. For more information, see Node-to-node
// encryption for Amazon OpenSearch Service (https://docs.aws.amazon.com/opensearch-service/latest/developerguide/ntn.html).
type NodeToNodeEncryptionOptions struct {
	Enabled *bool `json:"enabled,omitempty"`
}

// Status of the node-to-node encryption options for the specified domain.
type NodeToNodeEncryptionOptionsStatus struct {
	// Enables or disables node-to-node encryption. For more information, see Node-to-node
	// encryption for Amazon OpenSearch Service (https://docs.aws.amazon.com/opensearch-service/latest/developerguide/ntn.html).
	Options *NodeToNodeEncryptionOptions `json:"options,omitempty"`
}

// A custom 10-hour, low-traffic window during which OpenSearch Service can
// perform mandatory configuration changes on the domain. These actions can
// include scheduled service software updates and blue/green Auto-Tune enhancements.
// OpenSearch Service will schedule these actions during the window that you
// specify.
//
// If you don't specify a window start time, it defaults to 10:00 P.M. local
// time.
//
// For more information, see Defining off-peak maintenance windows for Amazon
// OpenSearch Service (https://docs.aws.amazon.com/opensearch-service/latest/developerguide/off-peak.html).
type OffPeakWindow struct {
	// The desired start time for an off-peak maintenance window (https://docs.aws.amazon.com/opensearch-service/latest/APIReference/API_OffPeakWindow.html).
	WindowStartTime *WindowStartTime `json:"windowStartTime,omitempty"`
}

// Options for a domain's off-peak window (https://docs.aws.amazon.com/opensearch-service/latest/APIReference/API_OffPeakWindow.html),
// during which OpenSearch Service can perform mandatory configuration changes
// on the domain.
type OffPeakWindowOptions struct {
	Enabled *bool `json:"enabled,omitempty"`
	// A custom 10-hour, low-traffic window during which OpenSearch Service can
	// perform mandatory configuration changes on the domain. These actions can
	// include scheduled service software updates and blue/green Auto-Tune enhancements.
	// OpenSearch Service will schedule these actions during the window that you
	// specify.
	//
	// If you don't specify a window start time, it defaults to 10:00 P.M. local
	// time.
	//
	// For more information, see Defining off-peak maintenance windows for Amazon
	// OpenSearch Service (https://docs.aws.amazon.com/opensearch-service/latest/developerguide/off-peak.html).
	OffPeakWindow *OffPeakWindow `json:"offPeakWindow,omitempty"`
}

// The status of off-peak window (https://docs.aws.amazon.com/opensearch-service/latest/APIReference/API_OffPeakWindow.html)
// options for a domain.
type OffPeakWindowOptionsStatus struct {
	// Options for a domain's off-peak window (https://docs.aws.amazon.com/opensearch-service/latest/APIReference/API_OffPeakWindow.html),
	// during which OpenSearch Service can perform mandatory configuration changes
	// on the domain.
	Options *OffPeakWindowOptions `json:"options,omitempty"`
}

// Provides the current status of an entity.
type OptionStatus struct {
	CreationDate    *metav1.Time `json:"creationDate,omitempty"`
	PendingDeletion *bool        `json:"pendingDeletion,omitempty"`
	UpdateDate      *metav1.Time `json:"updateDate,omitempty"`
}

// The configuration parameters for a package.
type PackageConfiguration struct {
	RequiresRestartForConfigurationUpdate *bool `json:"requiresRestartForConfigurationUpdate,omitempty"`
}

// Encryption options for a package.
type PackageEncryptionOptions struct {
	EncryptionEnabled *bool   `json:"encryptionEnabled,omitempty"`
	KMSKeyIdentifier  *string `json:"kmsKeyIdentifier,omitempty"`
}

// The vending options for a package to determine if the package can be used
// by other users.
type PackageVendingOptions struct {
	VendingEnabled *bool `json:"vendingEnabled,omitempty"`
}

// Contains the specific price and frequency of a recurring charges for an OpenSearch
// Reserved Instance, or for a Reserved Instance offering.
type RecurringCharge struct {
	RecurringChargeFrequency *string `json:"recurringChargeFrequency,omitempty"`
}

// Details of an OpenSearch Reserved Instance.
type ReservedInstance struct {
	CurrencyCode               *string      `json:"currencyCode,omitempty"`
	InstanceType               *string      `json:"instanceType,omitempty"`
	ReservedInstanceID         *string      `json:"reservedInstanceID,omitempty"`
	ReservedInstanceOfferingID *string      `json:"reservedInstanceOfferingID,omitempty"`
	StartTime                  *metav1.Time `json:"startTime,omitempty"`
	State                      *string      `json:"state,omitempty"`
}

// Details of an OpenSearch Reserved Instance offering.
type ReservedInstanceOffering struct {
	CurrencyCode               *string `json:"currencyCode,omitempty"`
	InstanceType               *string `json:"instanceType,omitempty"`
	ReservedInstanceOfferingID *string `json:"reservedInstanceOfferingID,omitempty"`
}

// Information about the Amazon S3 Glue Data Catalog.
type S3GlueDataCatalog struct {
	RoleARN *string `json:"roleARN,omitempty"`
}

// The SAML identity povider information.
type SAMLIDp struct {
	EntityID        *string `json:"entityID,omitempty"`
	MetadataContent *string `json:"metadataContent,omitempty"`
}

// The SAML authentication configuration for an Amazon OpenSearch Service domain.
type SAMLOptionsInput struct {
	Enabled *bool `json:"enabled,omitempty"`
	// The SAML identity povider information.
	IDp                   *SAMLIDp `json:"idp,omitempty"`
	MasterBackendRole     *string  `json:"masterBackendRole,omitempty"`
	MasterUserName        *string  `json:"masterUserName,omitempty"`
	RolesKey              *string  `json:"rolesKey,omitempty"`
	SessionTimeoutMinutes *int64   `json:"sessionTimeoutMinutes,omitempty"`
	SubjectKey            *string  `json:"subjectKey,omitempty"`
}

// Describes the SAML application configured for the domain.
type SAMLOptionsOutput struct {
	Enabled *bool `json:"enabled,omitempty"`
	// The SAML identity povider information.
	IDp                   *SAMLIDp `json:"idp,omitempty"`
	RolesKey              *string  `json:"rolesKey,omitempty"`
	SessionTimeoutMinutes *int64   `json:"sessionTimeoutMinutes,omitempty"`
	SubjectKey            *string  `json:"subjectKey,omitempty"`
}

// Information about a scheduled configuration change for an OpenSearch Service
// domain. This actions can be a service software update (https://docs.aws.amazon.com/opensearch-service/latest/developerguide/service-software.html)
// or a blue/green Auto-Tune enhancement (https://docs.aws.amazon.com/opensearch-service/latest/developerguide/auto-tune.html#auto-tune-types).
type ScheduledAction struct {
	Cancellable *bool   `json:"cancellable,omitempty"`
	Description *string `json:"description,omitempty"`
	ID          *string `json:"id,omitempty"`
	Mandatory   *bool   `json:"mandatory,omitempty"`
}

// The current status of the service software for an Amazon OpenSearch Service
// domain. For more information, see Service software updates in Amazon OpenSearch
// Service (https://docs.aws.amazon.com/opensearch-service/latest/developerguide/service-software.html).
type ServiceSoftwareOptions struct {
	AutomatedUpdateDate *metav1.Time `json:"automatedUpdateDate,omitempty"`
	Cancellable         *bool        `json:"cancellable,omitempty"`
	CurrentVersion      *string      `json:"currentVersion,omitempty"`
	Description         *string      `json:"description,omitempty"`
	NewVersion          *string      `json:"newVersion,omitempty"`
	OptionalDeployment  *bool        `json:"optionalDeployment,omitempty"`
	UpdateAvailable     *bool        `json:"updateAvailable,omitempty"`
	UpdateStatus        *string      `json:"updateStatus,omitempty"`
}

// The time, in UTC format, when OpenSearch Service takes a daily automated
// snapshot of the specified domain. Default is 0 hours.
type SnapshotOptions struct {
	AutomatedSnapshotStartHour *int64 `json:"automatedSnapshotStartHour,omitempty"`
}

// Container for information about a daily automated snapshot for an OpenSearch
// Service domain.
type SnapshotOptionsStatus struct {
	// The time, in UTC format, when OpenSearch Service takes a daily automated
	// snapshot of the specified domain. Default is 0 hours.
	Options *SnapshotOptions `json:"options,omitempty"`
}

// Options for configuring service software updates for a domain.
type SoftwareUpdateOptions struct {
	AutoSoftwareUpdateEnabled *bool `json:"autoSoftwareUpdateEnabled,omitempty"`
}

// The status of the service software options for a domain.
type SoftwareUpdateOptionsStatus struct {
	// Options for configuring service software updates for a domain.
	Options *SoftwareUpdateOptions `json:"options,omitempty"`
}

// A tag (key-value pair) for an Amazon OpenSearch Service resource.
type Tag struct {
	// A string between 1 to 128 characters that specifies the key for a tag. Tag
	// keys must be unique for the domain to which they're attached.
	Key *string `json:"key,omitempty"`
	// A string between 0 to 256 characters that specifies the value for a tag.
	// Tag values can be null and don't have to be unique in a tag set.
	Value *string `json:"value,omitempty"`
}

// Information about the subnets and security groups for an Amazon OpenSearch
// Service domain provisioned within a virtual private cloud (VPC). For more
// information, see Launching your Amazon OpenSearch Service domains using a
// VPC (https://docs.aws.amazon.com/opensearch-service/latest/developerguide/vpc.html).
// This information only exists if the domain was created with VPCOptions.
type VPCDerivedInfo struct {
	AvailabilityZones []*string `json:"availabilityZones,omitempty"`
	SecurityGroupIDs  []*string `json:"securityGroupIDs,omitempty"`
	SubnetIDs         []*string `json:"subnetIDs,omitempty"`
	VPCID             *string   `json:"vpcID,omitempty"`
}

// Status of the VPC options for a specified domain.
type VPCDerivedInfoStatus struct {
	// Information about the subnets and security groups for an Amazon OpenSearch
	// Service domain provisioned within a virtual private cloud (VPC). For more
	// information, see Launching your Amazon OpenSearch Service domains using a
	// VPC (https://docs.aws.amazon.com/opensearch-service/latest/developerguide/vpc.html).
	// This information only exists if the domain was created with VPCOptions.
	Options *VPCDerivedInfo `json:"options,omitempty"`
}

// The connection endpoint for connecting to an Amazon OpenSearch Service domain
// through a proxy.
type VPCEndpoint struct {
	// Information about the subnets and security groups for an Amazon OpenSearch
	// Service domain provisioned within a virtual private cloud (VPC). For more
	// information, see Launching your Amazon OpenSearch Service domains using a
	// VPC (https://docs.aws.amazon.com/opensearch-service/latest/developerguide/vpc.html).
	// This information only exists if the domain was created with VPCOptions.
	VPCOptions *VPCDerivedInfo `json:"vpcOptions,omitempty"`
}

// Error information when attempting to describe an Amazon OpenSearch Service-managed
// VPC endpoint.
type VPCEndpointError struct {
	ErrorMessage *string `json:"errorMessage,omitempty"`
}

// Summary information for an Amazon OpenSearch Service-managed VPC endpoint.
type VPCEndpointSummary struct {
	VPCEndpointOwner *string `json:"vpcEndpointOwner,omitempty"`
}

// Options to specify the subnets and security groups for an Amazon OpenSearch
// Service VPC endpoint. For more information, see Launching your Amazon OpenSearch
// Service domains using a VPC (https://docs.aws.amazon.com/opensearch-service/latest/developerguide/vpc.html).
type VPCOptions struct {
	SecurityGroupIDs []*string `json:"securityGroupIDs,omitempty"`
	SubnetIDs        []*string `json:"subnetIDs,omitempty"`
}

// A validation failure that occurred as the result of a pre-update validation
// check (verbose dry run) on a domain.
type ValidationFailure struct {
	Code    *string `json:"code,omitempty"`
	Message *string `json:"message,omitempty"`
}

// The status of the the OpenSearch or Elasticsearch version options for the
// specified Amazon OpenSearch Service domain.
type VersionStatus struct {
	Options *string `json:"options,omitempty"`
}

// The desired start time for an off-peak maintenance window (https://docs.aws.amazon.com/opensearch-service/latest/APIReference/API_OffPeakWindow.html).
type WindowStartTime struct {
	Hours   *int64 `json:"hours,omitempty"`
	Minutes *int64 `json:"minutes,omitempty"`
}

// The zone awareness configuration for an Amazon OpenSearch Service domain.
type ZoneAwarenessConfig struct {
	AvailabilityZoneCount *int64 `json:"availabilityZoneCount,omitempty"`
}

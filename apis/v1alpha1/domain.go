// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License"). You may
// not use this file except in compliance with the License. A copy of the
// License is located at
//
//     http://aws.amazon.com/apache2.0/
//
// or in the "license" file accompanying this file. This file is distributed
// on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
// express or implied. See the License for the specific language governing
// permissions and limitations under the License.

// Code generated by ack-generate. DO NOT EDIT.

package v1alpha1

import (
	ackv1alpha1 "github.com/aws-controllers-k8s/runtime/apis/core/v1alpha1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// DomainSpec defines the desired state of Domain.
type DomainSpec struct {

	// IAM access policy as a JSON-formatted string.
	AccessPolicies *string `json:"accessPolicies,omitempty"`
	// Option to allow references to indices in an HTTP request body. Must be false
	// when configuring access to individual sub-resources. By default, the value
	// is true. See Advanced cluster parameters (http://docs.aws.amazon.com/opensearch-service/latest/developerguide/createupdatedomains.html#createdomain-configure-advanced-options)
	// for more information.
	AdvancedOptions map[string]*string `json:"advancedOptions,omitempty"`
	// Specifies advanced security options.
	AdvancedSecurityOptions *AdvancedSecurityOptionsInput `json:"advancedSecurityOptions,omitempty"`
	// Specifies Auto-Tune options.
	AutoTuneOptions *AutoTuneOptionsInput `json:"autoTuneOptions,omitempty"`
	// Configuration options for a domain. Specifies the instance type and number
	// of instances in the domain.
	ClusterConfig *ClusterConfig `json:"clusterConfig,omitempty"`
	// Options to specify the Cognito user and identity pools for OpenSearch Dashboards
	// authentication. For more information, see Configuring Amazon Cognito authentication
	// for OpenSearch Dashboards (http://docs.aws.amazon.com/opensearch-service/latest/developerguide/cognito-auth.html).
	CognitoOptions *CognitoOptions `json:"cognitoOptions,omitempty"`
	// Options to specify configurations that will be applied to the domain endpoint.
	DomainEndpointOptions *DomainEndpointOptions `json:"domainEndpointOptions,omitempty"`
	// Options to enable, disable, and specify the type and size of EBS storage
	// volumes.
	EBSOptions *EBSOptions `json:"ebsOptions,omitempty"`
	// Options for encryption of data at rest.
	EncryptionAtRestOptions *EncryptionAtRestOptions `json:"encryptionAtRestOptions,omitempty"`
	// String of format Elasticsearch_X.Y or OpenSearch_X.Y to specify the engine
	// version for the Amazon OpenSearch Service domain. For example, "OpenSearch_1.0"
	// or "Elasticsearch_7.9". For more information, see Creating and managing Amazon
	// OpenSearch Service domains (http://docs.aws.amazon.com/opensearch-service/latest/developerguide/createupdatedomains.html#createdomains).
	EngineVersion *string `json:"engineVersion,omitempty"`
	// Map of LogType and LogPublishingOption, each containing options to publish
	// a given type of OpenSearch log.
	LogPublishingOptions map[string]*LogPublishingOption `json:"logPublishingOptions,omitempty"`
	// The name of the Amazon OpenSearch Service domain you're creating. Domain
	// names are unique across the domains owned by an account within an AWS region.
	// Domain names must start with a lowercase letter and can contain the following
	// characters: a-z (lowercase), 0-9, and - (hyphen).
	// +kubebuilder:validation:Required
	Name *string `json:"name"`
	// Node-to-node encryption options.
	NodeToNodeEncryptionOptions *NodeToNodeEncryptionOptions `json:"nodeToNodeEncryptionOptions,omitempty"`
	// A list of Tag added during domain creation.
	Tags []*Tag `json:"tags,omitempty"`
	// Options to specify the subnets and security groups for a VPC endpoint. For
	// more information, see Launching your Amazon OpenSearch Service domains using
	// a VPC (http://docs.aws.amazon.com/opensearch-service/latest/developerguide/vpc.html).
	VPCOptions *VPCOptions `json:"vpcOptions,omitempty"`
}

// DomainStatus defines the observed state of Domain
type DomainStatus struct {
	// All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
	// that is used to contain resource sync state, account ownership,
	// constructed ARN for the resource
	// +kubebuilder:validation:Optional
	ACKResourceMetadata *ackv1alpha1.ResourceMetadata `json:"ackResourceMetadata"`
	// All CRS managed by ACK have a common `Status.Conditions` member that
	// contains a collection of `ackv1alpha1.Condition` objects that describe
	// the various terminal states of the CR and its backend AWS service API
	// resource
	// +kubebuilder:validation:Optional
	Conditions []*ackv1alpha1.Condition `json:"conditions"`
	// Specifies change details of the domain configuration change.
	// +kubebuilder:validation:Optional
	ChangeProgressDetails *ChangeProgressDetails `json:"changeProgressDetails,omitempty"`
	// The domain creation status. True if the creation of a domain is complete.
	// False if domain creation is still in progress.
	// +kubebuilder:validation:Optional
	Created *bool `json:"created,omitempty"`
	// The domain deletion status. True if a delete request has been received for
	// the domain but resource cleanup is still in progress. False if the domain
	// has not been deleted. Once domain deletion is complete, the status of the
	// domain is no longer returned.
	// +kubebuilder:validation:Optional
	Deleted *bool `json:"deleted,omitempty"`
	// The unique identifier for the specified domain.
	// +kubebuilder:validation:Optional
	DomainID *string `json:"domainID,omitempty"`
	// The domain endpoint that you use to submit index and search requests.
	// +kubebuilder:validation:Optional
	Endpoint *string `json:"endpoint,omitempty"`
	// Map containing the domain endpoints used to submit index and search requests.
	// Example key, value: 'vpc','vpc-endpoint-h2dsd34efgyghrtguk5gt6j2foh4.us-east-1.es.amazonaws.com'.
	// +kubebuilder:validation:Optional
	Endpoints map[string]*string `json:"endpoints,omitempty"`
	// The status of the domain configuration. True if Amazon OpenSearch Service
	// is processing configuration changes. False if the configuration is active.
	// +kubebuilder:validation:Optional
	Processing *bool `json:"processing,omitempty"`
	// The current status of the domain's service software.
	// +kubebuilder:validation:Optional
	ServiceSoftwareOptions *ServiceSoftwareOptions `json:"serviceSoftwareOptions,omitempty"`
	// The status of the SnapshotOptions.
	// +kubebuilder:validation:Optional
	SnapshotOptions *SnapshotOptions `json:"snapshotOptions,omitempty"`
	// The status of a domain version upgrade. True if Amazon OpenSearch Service
	// is undergoing a version upgrade. False if the configuration is active.
	// +kubebuilder:validation:Optional
	UpgradeProcessing *bool `json:"upgradeProcessing,omitempty"`
}

// Domain is the Schema for the Domains API
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
type Domain struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              DomainSpec   `json:"spec,omitempty"`
	Status            DomainStatus `json:"status,omitempty"`
}

// DomainList contains a list of Domain
// +kubebuilder:object:root=true
type DomainList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Domain `json:"items"`
}

func init() {
	SchemeBuilder.Register(&Domain{}, &DomainList{})
}

// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License"). You may
// not use this file except in compliance with the License. A copy of the
// License is located at
//
//     http://aws.amazon.com/apache2.0/
//
// or in the "license" file accompanying this file. This file is distributed
// on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
// express or implied. See the License for the specific language governing
// permissions and limitations under the License.

// Code generated by ack-generate. DO NOT EDIT.

package domain

import (
	"bytes"
	"reflect"

	ackcompare "github.com/aws-controllers-k8s/runtime/pkg/compare"
)

// Hack to avoid import errors during build...
var (
	_ = &bytes.Buffer{}
	_ = &reflect.Method{}
)

// newResourceDelta returns a new `ackcompare.Delta` used to compare two
// resources
func newResourceDelta(
	a *resource,
	b *resource,
) *ackcompare.Delta {
	delta := ackcompare.NewDelta()
	if (a == nil && b != nil) ||
		(a != nil && b == nil) {
		delta.Add("", a, b)
		return delta
	}

	if ackcompare.HasNilDifference(a.ko.Spec.AccessPolicies, b.ko.Spec.AccessPolicies) {
		delta.Add("Spec.AccessPolicies", a.ko.Spec.AccessPolicies, b.ko.Spec.AccessPolicies)
	} else if a.ko.Spec.AccessPolicies != nil && b.ko.Spec.AccessPolicies != nil {
		if *a.ko.Spec.AccessPolicies != *b.ko.Spec.AccessPolicies {
			delta.Add("Spec.AccessPolicies", a.ko.Spec.AccessPolicies, b.ko.Spec.AccessPolicies)
		}
	}
	if ackcompare.HasNilDifference(a.ko.Spec.AdvancedOptions, b.ko.Spec.AdvancedOptions) {
		delta.Add("Spec.AdvancedOptions", a.ko.Spec.AdvancedOptions, b.ko.Spec.AdvancedOptions)
	} else if a.ko.Spec.AdvancedOptions != nil && b.ko.Spec.AdvancedOptions != nil {
		if !ackcompare.MapStringStringPEqual(a.ko.Spec.AdvancedOptions, b.ko.Spec.AdvancedOptions) {
			delta.Add("Spec.AdvancedOptions", a.ko.Spec.AdvancedOptions, b.ko.Spec.AdvancedOptions)
		}
	}
	if ackcompare.HasNilDifference(a.ko.Spec.AdvancedSecurityOptions, b.ko.Spec.AdvancedSecurityOptions) {
		delta.Add("Spec.AdvancedSecurityOptions", a.ko.Spec.AdvancedSecurityOptions, b.ko.Spec.AdvancedSecurityOptions)
	} else if a.ko.Spec.AdvancedSecurityOptions != nil && b.ko.Spec.AdvancedSecurityOptions != nil {
		if ackcompare.HasNilDifference(a.ko.Spec.AdvancedSecurityOptions.Enabled, b.ko.Spec.AdvancedSecurityOptions.Enabled) {
			delta.Add("Spec.AdvancedSecurityOptions.Enabled", a.ko.Spec.AdvancedSecurityOptions.Enabled, b.ko.Spec.AdvancedSecurityOptions.Enabled)
		} else if a.ko.Spec.AdvancedSecurityOptions.Enabled != nil && b.ko.Spec.AdvancedSecurityOptions.Enabled != nil {
			if *a.ko.Spec.AdvancedSecurityOptions.Enabled != *b.ko.Spec.AdvancedSecurityOptions.Enabled {
				delta.Add("Spec.AdvancedSecurityOptions.Enabled", a.ko.Spec.AdvancedSecurityOptions.Enabled, b.ko.Spec.AdvancedSecurityOptions.Enabled)
			}
		}
		if ackcompare.HasNilDifference(a.ko.Spec.AdvancedSecurityOptions.InternalUserDatabaseEnabled, b.ko.Spec.AdvancedSecurityOptions.InternalUserDatabaseEnabled) {
			delta.Add("Spec.AdvancedSecurityOptions.InternalUserDatabaseEnabled", a.ko.Spec.AdvancedSecurityOptions.InternalUserDatabaseEnabled, b.ko.Spec.AdvancedSecurityOptions.InternalUserDatabaseEnabled)
		} else if a.ko.Spec.AdvancedSecurityOptions.InternalUserDatabaseEnabled != nil && b.ko.Spec.AdvancedSecurityOptions.InternalUserDatabaseEnabled != nil {
			if *a.ko.Spec.AdvancedSecurityOptions.InternalUserDatabaseEnabled != *b.ko.Spec.AdvancedSecurityOptions.InternalUserDatabaseEnabled {
				delta.Add("Spec.AdvancedSecurityOptions.InternalUserDatabaseEnabled", a.ko.Spec.AdvancedSecurityOptions.InternalUserDatabaseEnabled, b.ko.Spec.AdvancedSecurityOptions.InternalUserDatabaseEnabled)
			}
		}
		if ackcompare.HasNilDifference(a.ko.Spec.AdvancedSecurityOptions.MasterUserOptions, b.ko.Spec.AdvancedSecurityOptions.MasterUserOptions) {
			delta.Add("Spec.AdvancedSecurityOptions.MasterUserOptions", a.ko.Spec.AdvancedSecurityOptions.MasterUserOptions, b.ko.Spec.AdvancedSecurityOptions.MasterUserOptions)
		} else if a.ko.Spec.AdvancedSecurityOptions.MasterUserOptions != nil && b.ko.Spec.AdvancedSecurityOptions.MasterUserOptions != nil {
			if ackcompare.HasNilDifference(a.ko.Spec.AdvancedSecurityOptions.MasterUserOptions.MasterUserARN, b.ko.Spec.AdvancedSecurityOptions.MasterUserOptions.MasterUserARN) {
				delta.Add("Spec.AdvancedSecurityOptions.MasterUserOptions.MasterUserARN", a.ko.Spec.AdvancedSecurityOptions.MasterUserOptions.MasterUserARN, b.ko.Spec.AdvancedSecurityOptions.MasterUserOptions.MasterUserARN)
			} else if a.ko.Spec.AdvancedSecurityOptions.MasterUserOptions.MasterUserARN != nil && b.ko.Spec.AdvancedSecurityOptions.MasterUserOptions.MasterUserARN != nil {
				if *a.ko.Spec.AdvancedSecurityOptions.MasterUserOptions.MasterUserARN != *b.ko.Spec.AdvancedSecurityOptions.MasterUserOptions.MasterUserARN {
					delta.Add("Spec.AdvancedSecurityOptions.MasterUserOptions.MasterUserARN", a.ko.Spec.AdvancedSecurityOptions.MasterUserOptions.MasterUserARN, b.ko.Spec.AdvancedSecurityOptions.MasterUserOptions.MasterUserARN)
				}
			}
			if ackcompare.HasNilDifference(a.ko.Spec.AdvancedSecurityOptions.MasterUserOptions.MasterUserName, b.ko.Spec.AdvancedSecurityOptions.MasterUserOptions.MasterUserName) {
				delta.Add("Spec.AdvancedSecurityOptions.MasterUserOptions.MasterUserName", a.ko.Spec.AdvancedSecurityOptions.MasterUserOptions.MasterUserName, b.ko.Spec.AdvancedSecurityOptions.MasterUserOptions.MasterUserName)
			} else if a.ko.Spec.AdvancedSecurityOptions.MasterUserOptions.MasterUserName != nil && b.ko.Spec.AdvancedSecurityOptions.MasterUserOptions.MasterUserName != nil {
				if *a.ko.Spec.AdvancedSecurityOptions.MasterUserOptions.MasterUserName != *b.ko.Spec.AdvancedSecurityOptions.MasterUserOptions.MasterUserName {
					delta.Add("Spec.AdvancedSecurityOptions.MasterUserOptions.MasterUserName", a.ko.Spec.AdvancedSecurityOptions.MasterUserOptions.MasterUserName, b.ko.Spec.AdvancedSecurityOptions.MasterUserOptions.MasterUserName)
				}
			}
			if ackcompare.HasNilDifference(a.ko.Spec.AdvancedSecurityOptions.MasterUserOptions.MasterUserPassword, b.ko.Spec.AdvancedSecurityOptions.MasterUserOptions.MasterUserPassword) {
				delta.Add("Spec.AdvancedSecurityOptions.MasterUserOptions.MasterUserPassword", a.ko.Spec.AdvancedSecurityOptions.MasterUserOptions.MasterUserPassword, b.ko.Spec.AdvancedSecurityOptions.MasterUserOptions.MasterUserPassword)
			} else if a.ko.Spec.AdvancedSecurityOptions.MasterUserOptions.MasterUserPassword != nil && b.ko.Spec.AdvancedSecurityOptions.MasterUserOptions.MasterUserPassword != nil {
				if *a.ko.Spec.AdvancedSecurityOptions.MasterUserOptions.MasterUserPassword != *b.ko.Spec.AdvancedSecurityOptions.MasterUserOptions.MasterUserPassword {
					delta.Add("Spec.AdvancedSecurityOptions.MasterUserOptions.MasterUserPassword", a.ko.Spec.AdvancedSecurityOptions.MasterUserOptions.MasterUserPassword, b.ko.Spec.AdvancedSecurityOptions.MasterUserOptions.MasterUserPassword)
				}
			}
		}
		if ackcompare.HasNilDifference(a.ko.Spec.AdvancedSecurityOptions.SAMLOptions, b.ko.Spec.AdvancedSecurityOptions.SAMLOptions) {
			delta.Add("Spec.AdvancedSecurityOptions.SAMLOptions", a.ko.Spec.AdvancedSecurityOptions.SAMLOptions, b.ko.Spec.AdvancedSecurityOptions.SAMLOptions)
		} else if a.ko.Spec.AdvancedSecurityOptions.SAMLOptions != nil && b.ko.Spec.AdvancedSecurityOptions.SAMLOptions != nil {
			if ackcompare.HasNilDifference(a.ko.Spec.AdvancedSecurityOptions.SAMLOptions.Enabled, b.ko.Spec.AdvancedSecurityOptions.SAMLOptions.Enabled) {
				delta.Add("Spec.AdvancedSecurityOptions.SAMLOptions.Enabled", a.ko.Spec.AdvancedSecurityOptions.SAMLOptions.Enabled, b.ko.Spec.AdvancedSecurityOptions.SAMLOptions.Enabled)
			} else if a.ko.Spec.AdvancedSecurityOptions.SAMLOptions.Enabled != nil && b.ko.Spec.AdvancedSecurityOptions.SAMLOptions.Enabled != nil {
				if *a.ko.Spec.AdvancedSecurityOptions.SAMLOptions.Enabled != *b.ko.Spec.AdvancedSecurityOptions.SAMLOptions.Enabled {
					delta.Add("Spec.AdvancedSecurityOptions.SAMLOptions.Enabled", a.ko.Spec.AdvancedSecurityOptions.SAMLOptions.Enabled, b.ko.Spec.AdvancedSecurityOptions.SAMLOptions.Enabled)
				}
			}
			if ackcompare.HasNilDifference(a.ko.Spec.AdvancedSecurityOptions.SAMLOptions.IDp, b.ko.Spec.AdvancedSecurityOptions.SAMLOptions.IDp) {
				delta.Add("Spec.AdvancedSecurityOptions.SAMLOptions.IDp", a.ko.Spec.AdvancedSecurityOptions.SAMLOptions.IDp, b.ko.Spec.AdvancedSecurityOptions.SAMLOptions.IDp)
			} else if a.ko.Spec.AdvancedSecurityOptions.SAMLOptions.IDp != nil && b.ko.Spec.AdvancedSecurityOptions.SAMLOptions.IDp != nil {
				if ackcompare.HasNilDifference(a.ko.Spec.AdvancedSecurityOptions.SAMLOptions.IDp.EntityID, b.ko.Spec.AdvancedSecurityOptions.SAMLOptions.IDp.EntityID) {
					delta.Add("Spec.AdvancedSecurityOptions.SAMLOptions.IDp.EntityID", a.ko.Spec.AdvancedSecurityOptions.SAMLOptions.IDp.EntityID, b.ko.Spec.AdvancedSecurityOptions.SAMLOptions.IDp.EntityID)
				} else if a.ko.Spec.AdvancedSecurityOptions.SAMLOptions.IDp.EntityID != nil && b.ko.Spec.AdvancedSecurityOptions.SAMLOptions.IDp.EntityID != nil {
					if *a.ko.Spec.AdvancedSecurityOptions.SAMLOptions.IDp.EntityID != *b.ko.Spec.AdvancedSecurityOptions.SAMLOptions.IDp.EntityID {
						delta.Add("Spec.AdvancedSecurityOptions.SAMLOptions.IDp.EntityID", a.ko.Spec.AdvancedSecurityOptions.SAMLOptions.IDp.EntityID, b.ko.Spec.AdvancedSecurityOptions.SAMLOptions.IDp.EntityID)
					}
				}
				if ackcompare.HasNilDifference(a.ko.Spec.AdvancedSecurityOptions.SAMLOptions.IDp.MetadataContent, b.ko.Spec.AdvancedSecurityOptions.SAMLOptions.IDp.MetadataContent) {
					delta.Add("Spec.AdvancedSecurityOptions.SAMLOptions.IDp.MetadataContent", a.ko.Spec.AdvancedSecurityOptions.SAMLOptions.IDp.MetadataContent, b.ko.Spec.AdvancedSecurityOptions.SAMLOptions.IDp.MetadataContent)
				} else if a.ko.Spec.AdvancedSecurityOptions.SAMLOptions.IDp.MetadataContent != nil && b.ko.Spec.AdvancedSecurityOptions.SAMLOptions.IDp.MetadataContent != nil {
					if *a.ko.Spec.AdvancedSecurityOptions.SAMLOptions.IDp.MetadataContent != *b.ko.Spec.AdvancedSecurityOptions.SAMLOptions.IDp.MetadataContent {
						delta.Add("Spec.AdvancedSecurityOptions.SAMLOptions.IDp.MetadataContent", a.ko.Spec.AdvancedSecurityOptions.SAMLOptions.IDp.MetadataContent, b.ko.Spec.AdvancedSecurityOptions.SAMLOptions.IDp.MetadataContent)
					}
				}
			}
			if ackcompare.HasNilDifference(a.ko.Spec.AdvancedSecurityOptions.SAMLOptions.MasterBackendRole, b.ko.Spec.AdvancedSecurityOptions.SAMLOptions.MasterBackendRole) {
				delta.Add("Spec.AdvancedSecurityOptions.SAMLOptions.MasterBackendRole", a.ko.Spec.AdvancedSecurityOptions.SAMLOptions.MasterBackendRole, b.ko.Spec.AdvancedSecurityOptions.SAMLOptions.MasterBackendRole)
			} else if a.ko.Spec.AdvancedSecurityOptions.SAMLOptions.MasterBackendRole != nil && b.ko.Spec.AdvancedSecurityOptions.SAMLOptions.MasterBackendRole != nil {
				if *a.ko.Spec.AdvancedSecurityOptions.SAMLOptions.MasterBackendRole != *b.ko.Spec.AdvancedSecurityOptions.SAMLOptions.MasterBackendRole {
					delta.Add("Spec.AdvancedSecurityOptions.SAMLOptions.MasterBackendRole", a.ko.Spec.AdvancedSecurityOptions.SAMLOptions.MasterBackendRole, b.ko.Spec.AdvancedSecurityOptions.SAMLOptions.MasterBackendRole)
				}
			}
			if ackcompare.HasNilDifference(a.ko.Spec.AdvancedSecurityOptions.SAMLOptions.MasterUserName, b.ko.Spec.AdvancedSecurityOptions.SAMLOptions.MasterUserName) {
				delta.Add("Spec.AdvancedSecurityOptions.SAMLOptions.MasterUserName", a.ko.Spec.AdvancedSecurityOptions.SAMLOptions.MasterUserName, b.ko.Spec.AdvancedSecurityOptions.SAMLOptions.MasterUserName)
			} else if a.ko.Spec.AdvancedSecurityOptions.SAMLOptions.MasterUserName != nil && b.ko.Spec.AdvancedSecurityOptions.SAMLOptions.MasterUserName != nil {
				if *a.ko.Spec.AdvancedSecurityOptions.SAMLOptions.MasterUserName != *b.ko.Spec.AdvancedSecurityOptions.SAMLOptions.MasterUserName {
					delta.Add("Spec.AdvancedSecurityOptions.SAMLOptions.MasterUserName", a.ko.Spec.AdvancedSecurityOptions.SAMLOptions.MasterUserName, b.ko.Spec.AdvancedSecurityOptions.SAMLOptions.MasterUserName)
				}
			}
			if ackcompare.HasNilDifference(a.ko.Spec.AdvancedSecurityOptions.SAMLOptions.RolesKey, b.ko.Spec.AdvancedSecurityOptions.SAMLOptions.RolesKey) {
				delta.Add("Spec.AdvancedSecurityOptions.SAMLOptions.RolesKey", a.ko.Spec.AdvancedSecurityOptions.SAMLOptions.RolesKey, b.ko.Spec.AdvancedSecurityOptions.SAMLOptions.RolesKey)
			} else if a.ko.Spec.AdvancedSecurityOptions.SAMLOptions.RolesKey != nil && b.ko.Spec.AdvancedSecurityOptions.SAMLOptions.RolesKey != nil {
				if *a.ko.Spec.AdvancedSecurityOptions.SAMLOptions.RolesKey != *b.ko.Spec.AdvancedSecurityOptions.SAMLOptions.RolesKey {
					delta.Add("Spec.AdvancedSecurityOptions.SAMLOptions.RolesKey", a.ko.Spec.AdvancedSecurityOptions.SAMLOptions.RolesKey, b.ko.Spec.AdvancedSecurityOptions.SAMLOptions.RolesKey)
				}
			}
			if ackcompare.HasNilDifference(a.ko.Spec.AdvancedSecurityOptions.SAMLOptions.SessionTimeoutMinutes, b.ko.Spec.AdvancedSecurityOptions.SAMLOptions.SessionTimeoutMinutes) {
				delta.Add("Spec.AdvancedSecurityOptions.SAMLOptions.SessionTimeoutMinutes", a.ko.Spec.AdvancedSecurityOptions.SAMLOptions.SessionTimeoutMinutes, b.ko.Spec.AdvancedSecurityOptions.SAMLOptions.SessionTimeoutMinutes)
			} else if a.ko.Spec.AdvancedSecurityOptions.SAMLOptions.SessionTimeoutMinutes != nil && b.ko.Spec.AdvancedSecurityOptions.SAMLOptions.SessionTimeoutMinutes != nil {
				if *a.ko.Spec.AdvancedSecurityOptions.SAMLOptions.SessionTimeoutMinutes != *b.ko.Spec.AdvancedSecurityOptions.SAMLOptions.SessionTimeoutMinutes {
					delta.Add("Spec.AdvancedSecurityOptions.SAMLOptions.SessionTimeoutMinutes", a.ko.Spec.AdvancedSecurityOptions.SAMLOptions.SessionTimeoutMinutes, b.ko.Spec.AdvancedSecurityOptions.SAMLOptions.SessionTimeoutMinutes)
				}
			}
			if ackcompare.HasNilDifference(a.ko.Spec.AdvancedSecurityOptions.SAMLOptions.SubjectKey, b.ko.Spec.AdvancedSecurityOptions.SAMLOptions.SubjectKey) {
				delta.Add("Spec.AdvancedSecurityOptions.SAMLOptions.SubjectKey", a.ko.Spec.AdvancedSecurityOptions.SAMLOptions.SubjectKey, b.ko.Spec.AdvancedSecurityOptions.SAMLOptions.SubjectKey)
			} else if a.ko.Spec.AdvancedSecurityOptions.SAMLOptions.SubjectKey != nil && b.ko.Spec.AdvancedSecurityOptions.SAMLOptions.SubjectKey != nil {
				if *a.ko.Spec.AdvancedSecurityOptions.SAMLOptions.SubjectKey != *b.ko.Spec.AdvancedSecurityOptions.SAMLOptions.SubjectKey {
					delta.Add("Spec.AdvancedSecurityOptions.SAMLOptions.SubjectKey", a.ko.Spec.AdvancedSecurityOptions.SAMLOptions.SubjectKey, b.ko.Spec.AdvancedSecurityOptions.SAMLOptions.SubjectKey)
				}
			}
		}
	}
	if ackcompare.HasNilDifference(a.ko.Spec.AutoTuneOptions, b.ko.Spec.AutoTuneOptions) {
		delta.Add("Spec.AutoTuneOptions", a.ko.Spec.AutoTuneOptions, b.ko.Spec.AutoTuneOptions)
	} else if a.ko.Spec.AutoTuneOptions != nil && b.ko.Spec.AutoTuneOptions != nil {
		if ackcompare.HasNilDifference(a.ko.Spec.AutoTuneOptions.DesiredState, b.ko.Spec.AutoTuneOptions.DesiredState) {
			delta.Add("Spec.AutoTuneOptions.DesiredState", a.ko.Spec.AutoTuneOptions.DesiredState, b.ko.Spec.AutoTuneOptions.DesiredState)
		} else if a.ko.Spec.AutoTuneOptions.DesiredState != nil && b.ko.Spec.AutoTuneOptions.DesiredState != nil {
			if *a.ko.Spec.AutoTuneOptions.DesiredState != *b.ko.Spec.AutoTuneOptions.DesiredState {
				delta.Add("Spec.AutoTuneOptions.DesiredState", a.ko.Spec.AutoTuneOptions.DesiredState, b.ko.Spec.AutoTuneOptions.DesiredState)
			}
		}
		if !reflect.DeepEqual(a.ko.Spec.AutoTuneOptions.MaintenanceSchedules, b.ko.Spec.AutoTuneOptions.MaintenanceSchedules) {
			delta.Add("Spec.AutoTuneOptions.MaintenanceSchedules", a.ko.Spec.AutoTuneOptions.MaintenanceSchedules, b.ko.Spec.AutoTuneOptions.MaintenanceSchedules)
		}
	}
	if ackcompare.HasNilDifference(a.ko.Spec.ClusterConfig, b.ko.Spec.ClusterConfig) {
		delta.Add("Spec.ClusterConfig", a.ko.Spec.ClusterConfig, b.ko.Spec.ClusterConfig)
	} else if a.ko.Spec.ClusterConfig != nil && b.ko.Spec.ClusterConfig != nil {
		if ackcompare.HasNilDifference(a.ko.Spec.ClusterConfig.ColdStorageOptions, b.ko.Spec.ClusterConfig.ColdStorageOptions) {
			delta.Add("Spec.ClusterConfig.ColdStorageOptions", a.ko.Spec.ClusterConfig.ColdStorageOptions, b.ko.Spec.ClusterConfig.ColdStorageOptions)
		} else if a.ko.Spec.ClusterConfig.ColdStorageOptions != nil && b.ko.Spec.ClusterConfig.ColdStorageOptions != nil {
			if ackcompare.HasNilDifference(a.ko.Spec.ClusterConfig.ColdStorageOptions.Enabled, b.ko.Spec.ClusterConfig.ColdStorageOptions.Enabled) {
				delta.Add("Spec.ClusterConfig.ColdStorageOptions.Enabled", a.ko.Spec.ClusterConfig.ColdStorageOptions.Enabled, b.ko.Spec.ClusterConfig.ColdStorageOptions.Enabled)
			} else if a.ko.Spec.ClusterConfig.ColdStorageOptions.Enabled != nil && b.ko.Spec.ClusterConfig.ColdStorageOptions.Enabled != nil {
				if *a.ko.Spec.ClusterConfig.ColdStorageOptions.Enabled != *b.ko.Spec.ClusterConfig.ColdStorageOptions.Enabled {
					delta.Add("Spec.ClusterConfig.ColdStorageOptions.Enabled", a.ko.Spec.ClusterConfig.ColdStorageOptions.Enabled, b.ko.Spec.ClusterConfig.ColdStorageOptions.Enabled)
				}
			}
		}
		if ackcompare.HasNilDifference(a.ko.Spec.ClusterConfig.DedicatedMasterCount, b.ko.Spec.ClusterConfig.DedicatedMasterCount) {
			delta.Add("Spec.ClusterConfig.DedicatedMasterCount", a.ko.Spec.ClusterConfig.DedicatedMasterCount, b.ko.Spec.ClusterConfig.DedicatedMasterCount)
		} else if a.ko.Spec.ClusterConfig.DedicatedMasterCount != nil && b.ko.Spec.ClusterConfig.DedicatedMasterCount != nil {
			if *a.ko.Spec.ClusterConfig.DedicatedMasterCount != *b.ko.Spec.ClusterConfig.DedicatedMasterCount {
				delta.Add("Spec.ClusterConfig.DedicatedMasterCount", a.ko.Spec.ClusterConfig.DedicatedMasterCount, b.ko.Spec.ClusterConfig.DedicatedMasterCount)
			}
		}
		if ackcompare.HasNilDifference(a.ko.Spec.ClusterConfig.DedicatedMasterEnabled, b.ko.Spec.ClusterConfig.DedicatedMasterEnabled) {
			delta.Add("Spec.ClusterConfig.DedicatedMasterEnabled", a.ko.Spec.ClusterConfig.DedicatedMasterEnabled, b.ko.Spec.ClusterConfig.DedicatedMasterEnabled)
		} else if a.ko.Spec.ClusterConfig.DedicatedMasterEnabled != nil && b.ko.Spec.ClusterConfig.DedicatedMasterEnabled != nil {
			if *a.ko.Spec.ClusterConfig.DedicatedMasterEnabled != *b.ko.Spec.ClusterConfig.DedicatedMasterEnabled {
				delta.Add("Spec.ClusterConfig.DedicatedMasterEnabled", a.ko.Spec.ClusterConfig.DedicatedMasterEnabled, b.ko.Spec.ClusterConfig.DedicatedMasterEnabled)
			}
		}
		if ackcompare.HasNilDifference(a.ko.Spec.ClusterConfig.DedicatedMasterType, b.ko.Spec.ClusterConfig.DedicatedMasterType) {
			delta.Add("Spec.ClusterConfig.DedicatedMasterType", a.ko.Spec.ClusterConfig.DedicatedMasterType, b.ko.Spec.ClusterConfig.DedicatedMasterType)
		} else if a.ko.Spec.ClusterConfig.DedicatedMasterType != nil && b.ko.Spec.ClusterConfig.DedicatedMasterType != nil {
			if *a.ko.Spec.ClusterConfig.DedicatedMasterType != *b.ko.Spec.ClusterConfig.DedicatedMasterType {
				delta.Add("Spec.ClusterConfig.DedicatedMasterType", a.ko.Spec.ClusterConfig.DedicatedMasterType, b.ko.Spec.ClusterConfig.DedicatedMasterType)
			}
		}
		if ackcompare.HasNilDifference(a.ko.Spec.ClusterConfig.InstanceCount, b.ko.Spec.ClusterConfig.InstanceCount) {
			delta.Add("Spec.ClusterConfig.InstanceCount", a.ko.Spec.ClusterConfig.InstanceCount, b.ko.Spec.ClusterConfig.InstanceCount)
		} else if a.ko.Spec.ClusterConfig.InstanceCount != nil && b.ko.Spec.ClusterConfig.InstanceCount != nil {
			if *a.ko.Spec.ClusterConfig.InstanceCount != *b.ko.Spec.ClusterConfig.InstanceCount {
				delta.Add("Spec.ClusterConfig.InstanceCount", a.ko.Spec.ClusterConfig.InstanceCount, b.ko.Spec.ClusterConfig.InstanceCount)
			}
		}
		if ackcompare.HasNilDifference(a.ko.Spec.ClusterConfig.InstanceType, b.ko.Spec.ClusterConfig.InstanceType) {
			delta.Add("Spec.ClusterConfig.InstanceType", a.ko.Spec.ClusterConfig.InstanceType, b.ko.Spec.ClusterConfig.InstanceType)
		} else if a.ko.Spec.ClusterConfig.InstanceType != nil && b.ko.Spec.ClusterConfig.InstanceType != nil {
			if *a.ko.Spec.ClusterConfig.InstanceType != *b.ko.Spec.ClusterConfig.InstanceType {
				delta.Add("Spec.ClusterConfig.InstanceType", a.ko.Spec.ClusterConfig.InstanceType, b.ko.Spec.ClusterConfig.InstanceType)
			}
		}
		if ackcompare.HasNilDifference(a.ko.Spec.ClusterConfig.WarmCount, b.ko.Spec.ClusterConfig.WarmCount) {
			delta.Add("Spec.ClusterConfig.WarmCount", a.ko.Spec.ClusterConfig.WarmCount, b.ko.Spec.ClusterConfig.WarmCount)
		} else if a.ko.Spec.ClusterConfig.WarmCount != nil && b.ko.Spec.ClusterConfig.WarmCount != nil {
			if *a.ko.Spec.ClusterConfig.WarmCount != *b.ko.Spec.ClusterConfig.WarmCount {
				delta.Add("Spec.ClusterConfig.WarmCount", a.ko.Spec.ClusterConfig.WarmCount, b.ko.Spec.ClusterConfig.WarmCount)
			}
		}
		if ackcompare.HasNilDifference(a.ko.Spec.ClusterConfig.WarmEnabled, b.ko.Spec.ClusterConfig.WarmEnabled) {
			delta.Add("Spec.ClusterConfig.WarmEnabled", a.ko.Spec.ClusterConfig.WarmEnabled, b.ko.Spec.ClusterConfig.WarmEnabled)
		} else if a.ko.Spec.ClusterConfig.WarmEnabled != nil && b.ko.Spec.ClusterConfig.WarmEnabled != nil {
			if *a.ko.Spec.ClusterConfig.WarmEnabled != *b.ko.Spec.ClusterConfig.WarmEnabled {
				delta.Add("Spec.ClusterConfig.WarmEnabled", a.ko.Spec.ClusterConfig.WarmEnabled, b.ko.Spec.ClusterConfig.WarmEnabled)
			}
		}
		if ackcompare.HasNilDifference(a.ko.Spec.ClusterConfig.WarmType, b.ko.Spec.ClusterConfig.WarmType) {
			delta.Add("Spec.ClusterConfig.WarmType", a.ko.Spec.ClusterConfig.WarmType, b.ko.Spec.ClusterConfig.WarmType)
		} else if a.ko.Spec.ClusterConfig.WarmType != nil && b.ko.Spec.ClusterConfig.WarmType != nil {
			if *a.ko.Spec.ClusterConfig.WarmType != *b.ko.Spec.ClusterConfig.WarmType {
				delta.Add("Spec.ClusterConfig.WarmType", a.ko.Spec.ClusterConfig.WarmType, b.ko.Spec.ClusterConfig.WarmType)
			}
		}
		if ackcompare.HasNilDifference(a.ko.Spec.ClusterConfig.ZoneAwarenessConfig, b.ko.Spec.ClusterConfig.ZoneAwarenessConfig) {
			delta.Add("Spec.ClusterConfig.ZoneAwarenessConfig", a.ko.Spec.ClusterConfig.ZoneAwarenessConfig, b.ko.Spec.ClusterConfig.ZoneAwarenessConfig)
		} else if a.ko.Spec.ClusterConfig.ZoneAwarenessConfig != nil && b.ko.Spec.ClusterConfig.ZoneAwarenessConfig != nil {
			if ackcompare.HasNilDifference(a.ko.Spec.ClusterConfig.ZoneAwarenessConfig.AvailabilityZoneCount, b.ko.Spec.ClusterConfig.ZoneAwarenessConfig.AvailabilityZoneCount) {
				delta.Add("Spec.ClusterConfig.ZoneAwarenessConfig.AvailabilityZoneCount", a.ko.Spec.ClusterConfig.ZoneAwarenessConfig.AvailabilityZoneCount, b.ko.Spec.ClusterConfig.ZoneAwarenessConfig.AvailabilityZoneCount)
			} else if a.ko.Spec.ClusterConfig.ZoneAwarenessConfig.AvailabilityZoneCount != nil && b.ko.Spec.ClusterConfig.ZoneAwarenessConfig.AvailabilityZoneCount != nil {
				if *a.ko.Spec.ClusterConfig.ZoneAwarenessConfig.AvailabilityZoneCount != *b.ko.Spec.ClusterConfig.ZoneAwarenessConfig.AvailabilityZoneCount {
					delta.Add("Spec.ClusterConfig.ZoneAwarenessConfig.AvailabilityZoneCount", a.ko.Spec.ClusterConfig.ZoneAwarenessConfig.AvailabilityZoneCount, b.ko.Spec.ClusterConfig.ZoneAwarenessConfig.AvailabilityZoneCount)
				}
			}
		}
		if ackcompare.HasNilDifference(a.ko.Spec.ClusterConfig.ZoneAwarenessEnabled, b.ko.Spec.ClusterConfig.ZoneAwarenessEnabled) {
			delta.Add("Spec.ClusterConfig.ZoneAwarenessEnabled", a.ko.Spec.ClusterConfig.ZoneAwarenessEnabled, b.ko.Spec.ClusterConfig.ZoneAwarenessEnabled)
		} else if a.ko.Spec.ClusterConfig.ZoneAwarenessEnabled != nil && b.ko.Spec.ClusterConfig.ZoneAwarenessEnabled != nil {
			if *a.ko.Spec.ClusterConfig.ZoneAwarenessEnabled != *b.ko.Spec.ClusterConfig.ZoneAwarenessEnabled {
				delta.Add("Spec.ClusterConfig.ZoneAwarenessEnabled", a.ko.Spec.ClusterConfig.ZoneAwarenessEnabled, b.ko.Spec.ClusterConfig.ZoneAwarenessEnabled)
			}
		}
	}
	if ackcompare.HasNilDifference(a.ko.Spec.CognitoOptions, b.ko.Spec.CognitoOptions) {
		delta.Add("Spec.CognitoOptions", a.ko.Spec.CognitoOptions, b.ko.Spec.CognitoOptions)
	} else if a.ko.Spec.CognitoOptions != nil && b.ko.Spec.CognitoOptions != nil {
		if ackcompare.HasNilDifference(a.ko.Spec.CognitoOptions.Enabled, b.ko.Spec.CognitoOptions.Enabled) {
			delta.Add("Spec.CognitoOptions.Enabled", a.ko.Spec.CognitoOptions.Enabled, b.ko.Spec.CognitoOptions.Enabled)
		} else if a.ko.Spec.CognitoOptions.Enabled != nil && b.ko.Spec.CognitoOptions.Enabled != nil {
			if *a.ko.Spec.CognitoOptions.Enabled != *b.ko.Spec.CognitoOptions.Enabled {
				delta.Add("Spec.CognitoOptions.Enabled", a.ko.Spec.CognitoOptions.Enabled, b.ko.Spec.CognitoOptions.Enabled)
			}
		}
		if ackcompare.HasNilDifference(a.ko.Spec.CognitoOptions.IdentityPoolID, b.ko.Spec.CognitoOptions.IdentityPoolID) {
			delta.Add("Spec.CognitoOptions.IdentityPoolID", a.ko.Spec.CognitoOptions.IdentityPoolID, b.ko.Spec.CognitoOptions.IdentityPoolID)
		} else if a.ko.Spec.CognitoOptions.IdentityPoolID != nil && b.ko.Spec.CognitoOptions.IdentityPoolID != nil {
			if *a.ko.Spec.CognitoOptions.IdentityPoolID != *b.ko.Spec.CognitoOptions.IdentityPoolID {
				delta.Add("Spec.CognitoOptions.IdentityPoolID", a.ko.Spec.CognitoOptions.IdentityPoolID, b.ko.Spec.CognitoOptions.IdentityPoolID)
			}
		}
		if ackcompare.HasNilDifference(a.ko.Spec.CognitoOptions.RoleARN, b.ko.Spec.CognitoOptions.RoleARN) {
			delta.Add("Spec.CognitoOptions.RoleARN", a.ko.Spec.CognitoOptions.RoleARN, b.ko.Spec.CognitoOptions.RoleARN)
		} else if a.ko.Spec.CognitoOptions.RoleARN != nil && b.ko.Spec.CognitoOptions.RoleARN != nil {
			if *a.ko.Spec.CognitoOptions.RoleARN != *b.ko.Spec.CognitoOptions.RoleARN {
				delta.Add("Spec.CognitoOptions.RoleARN", a.ko.Spec.CognitoOptions.RoleARN, b.ko.Spec.CognitoOptions.RoleARN)
			}
		}
		if ackcompare.HasNilDifference(a.ko.Spec.CognitoOptions.UserPoolID, b.ko.Spec.CognitoOptions.UserPoolID) {
			delta.Add("Spec.CognitoOptions.UserPoolID", a.ko.Spec.CognitoOptions.UserPoolID, b.ko.Spec.CognitoOptions.UserPoolID)
		} else if a.ko.Spec.CognitoOptions.UserPoolID != nil && b.ko.Spec.CognitoOptions.UserPoolID != nil {
			if *a.ko.Spec.CognitoOptions.UserPoolID != *b.ko.Spec.CognitoOptions.UserPoolID {
				delta.Add("Spec.CognitoOptions.UserPoolID", a.ko.Spec.CognitoOptions.UserPoolID, b.ko.Spec.CognitoOptions.UserPoolID)
			}
		}
	}
	if ackcompare.HasNilDifference(a.ko.Spec.DomainEndpointOptions, b.ko.Spec.DomainEndpointOptions) {
		delta.Add("Spec.DomainEndpointOptions", a.ko.Spec.DomainEndpointOptions, b.ko.Spec.DomainEndpointOptions)
	} else if a.ko.Spec.DomainEndpointOptions != nil && b.ko.Spec.DomainEndpointOptions != nil {
		if ackcompare.HasNilDifference(a.ko.Spec.DomainEndpointOptions.CustomEndpoint, b.ko.Spec.DomainEndpointOptions.CustomEndpoint) {
			delta.Add("Spec.DomainEndpointOptions.CustomEndpoint", a.ko.Spec.DomainEndpointOptions.CustomEndpoint, b.ko.Spec.DomainEndpointOptions.CustomEndpoint)
		} else if a.ko.Spec.DomainEndpointOptions.CustomEndpoint != nil && b.ko.Spec.DomainEndpointOptions.CustomEndpoint != nil {
			if *a.ko.Spec.DomainEndpointOptions.CustomEndpoint != *b.ko.Spec.DomainEndpointOptions.CustomEndpoint {
				delta.Add("Spec.DomainEndpointOptions.CustomEndpoint", a.ko.Spec.DomainEndpointOptions.CustomEndpoint, b.ko.Spec.DomainEndpointOptions.CustomEndpoint)
			}
		}
		if ackcompare.HasNilDifference(a.ko.Spec.DomainEndpointOptions.CustomEndpointCertificateARN, b.ko.Spec.DomainEndpointOptions.CustomEndpointCertificateARN) {
			delta.Add("Spec.DomainEndpointOptions.CustomEndpointCertificateARN", a.ko.Spec.DomainEndpointOptions.CustomEndpointCertificateARN, b.ko.Spec.DomainEndpointOptions.CustomEndpointCertificateARN)
		} else if a.ko.Spec.DomainEndpointOptions.CustomEndpointCertificateARN != nil && b.ko.Spec.DomainEndpointOptions.CustomEndpointCertificateARN != nil {
			if *a.ko.Spec.DomainEndpointOptions.CustomEndpointCertificateARN != *b.ko.Spec.DomainEndpointOptions.CustomEndpointCertificateARN {
				delta.Add("Spec.DomainEndpointOptions.CustomEndpointCertificateARN", a.ko.Spec.DomainEndpointOptions.CustomEndpointCertificateARN, b.ko.Spec.DomainEndpointOptions.CustomEndpointCertificateARN)
			}
		}
		if ackcompare.HasNilDifference(a.ko.Spec.DomainEndpointOptions.CustomEndpointEnabled, b.ko.Spec.DomainEndpointOptions.CustomEndpointEnabled) {
			delta.Add("Spec.DomainEndpointOptions.CustomEndpointEnabled", a.ko.Spec.DomainEndpointOptions.CustomEndpointEnabled, b.ko.Spec.DomainEndpointOptions.CustomEndpointEnabled)
		} else if a.ko.Spec.DomainEndpointOptions.CustomEndpointEnabled != nil && b.ko.Spec.DomainEndpointOptions.CustomEndpointEnabled != nil {
			if *a.ko.Spec.DomainEndpointOptions.CustomEndpointEnabled != *b.ko.Spec.DomainEndpointOptions.CustomEndpointEnabled {
				delta.Add("Spec.DomainEndpointOptions.CustomEndpointEnabled", a.ko.Spec.DomainEndpointOptions.CustomEndpointEnabled, b.ko.Spec.DomainEndpointOptions.CustomEndpointEnabled)
			}
		}
		if ackcompare.HasNilDifference(a.ko.Spec.DomainEndpointOptions.EnforceHTTPS, b.ko.Spec.DomainEndpointOptions.EnforceHTTPS) {
			delta.Add("Spec.DomainEndpointOptions.EnforceHTTPS", a.ko.Spec.DomainEndpointOptions.EnforceHTTPS, b.ko.Spec.DomainEndpointOptions.EnforceHTTPS)
		} else if a.ko.Spec.DomainEndpointOptions.EnforceHTTPS != nil && b.ko.Spec.DomainEndpointOptions.EnforceHTTPS != nil {
			if *a.ko.Spec.DomainEndpointOptions.EnforceHTTPS != *b.ko.Spec.DomainEndpointOptions.EnforceHTTPS {
				delta.Add("Spec.DomainEndpointOptions.EnforceHTTPS", a.ko.Spec.DomainEndpointOptions.EnforceHTTPS, b.ko.Spec.DomainEndpointOptions.EnforceHTTPS)
			}
		}
		if ackcompare.HasNilDifference(a.ko.Spec.DomainEndpointOptions.TLSSecurityPolicy, b.ko.Spec.DomainEndpointOptions.TLSSecurityPolicy) {
			delta.Add("Spec.DomainEndpointOptions.TLSSecurityPolicy", a.ko.Spec.DomainEndpointOptions.TLSSecurityPolicy, b.ko.Spec.DomainEndpointOptions.TLSSecurityPolicy)
		} else if a.ko.Spec.DomainEndpointOptions.TLSSecurityPolicy != nil && b.ko.Spec.DomainEndpointOptions.TLSSecurityPolicy != nil {
			if *a.ko.Spec.DomainEndpointOptions.TLSSecurityPolicy != *b.ko.Spec.DomainEndpointOptions.TLSSecurityPolicy {
				delta.Add("Spec.DomainEndpointOptions.TLSSecurityPolicy", a.ko.Spec.DomainEndpointOptions.TLSSecurityPolicy, b.ko.Spec.DomainEndpointOptions.TLSSecurityPolicy)
			}
		}
	}
	if ackcompare.HasNilDifference(a.ko.Spec.DomainName, b.ko.Spec.DomainName) {
		delta.Add("Spec.DomainName", a.ko.Spec.DomainName, b.ko.Spec.DomainName)
	} else if a.ko.Spec.DomainName != nil && b.ko.Spec.DomainName != nil {
		if *a.ko.Spec.DomainName != *b.ko.Spec.DomainName {
			delta.Add("Spec.DomainName", a.ko.Spec.DomainName, b.ko.Spec.DomainName)
		}
	}
	if ackcompare.HasNilDifference(a.ko.Spec.EBSOptions, b.ko.Spec.EBSOptions) {
		delta.Add("Spec.EBSOptions", a.ko.Spec.EBSOptions, b.ko.Spec.EBSOptions)
	} else if a.ko.Spec.EBSOptions != nil && b.ko.Spec.EBSOptions != nil {
		if ackcompare.HasNilDifference(a.ko.Spec.EBSOptions.EBSEnabled, b.ko.Spec.EBSOptions.EBSEnabled) {
			delta.Add("Spec.EBSOptions.EBSEnabled", a.ko.Spec.EBSOptions.EBSEnabled, b.ko.Spec.EBSOptions.EBSEnabled)
		} else if a.ko.Spec.EBSOptions.EBSEnabled != nil && b.ko.Spec.EBSOptions.EBSEnabled != nil {
			if *a.ko.Spec.EBSOptions.EBSEnabled != *b.ko.Spec.EBSOptions.EBSEnabled {
				delta.Add("Spec.EBSOptions.EBSEnabled", a.ko.Spec.EBSOptions.EBSEnabled, b.ko.Spec.EBSOptions.EBSEnabled)
			}
		}
		if ackcompare.HasNilDifference(a.ko.Spec.EBSOptions.IOPS, b.ko.Spec.EBSOptions.IOPS) {
			delta.Add("Spec.EBSOptions.IOPS", a.ko.Spec.EBSOptions.IOPS, b.ko.Spec.EBSOptions.IOPS)
		} else if a.ko.Spec.EBSOptions.IOPS != nil && b.ko.Spec.EBSOptions.IOPS != nil {
			if *a.ko.Spec.EBSOptions.IOPS != *b.ko.Spec.EBSOptions.IOPS {
				delta.Add("Spec.EBSOptions.IOPS", a.ko.Spec.EBSOptions.IOPS, b.ko.Spec.EBSOptions.IOPS)
			}
		}
		if ackcompare.HasNilDifference(a.ko.Spec.EBSOptions.VolumeSize, b.ko.Spec.EBSOptions.VolumeSize) {
			delta.Add("Spec.EBSOptions.VolumeSize", a.ko.Spec.EBSOptions.VolumeSize, b.ko.Spec.EBSOptions.VolumeSize)
		} else if a.ko.Spec.EBSOptions.VolumeSize != nil && b.ko.Spec.EBSOptions.VolumeSize != nil {
			if *a.ko.Spec.EBSOptions.VolumeSize != *b.ko.Spec.EBSOptions.VolumeSize {
				delta.Add("Spec.EBSOptions.VolumeSize", a.ko.Spec.EBSOptions.VolumeSize, b.ko.Spec.EBSOptions.VolumeSize)
			}
		}
		if ackcompare.HasNilDifference(a.ko.Spec.EBSOptions.VolumeType, b.ko.Spec.EBSOptions.VolumeType) {
			delta.Add("Spec.EBSOptions.VolumeType", a.ko.Spec.EBSOptions.VolumeType, b.ko.Spec.EBSOptions.VolumeType)
		} else if a.ko.Spec.EBSOptions.VolumeType != nil && b.ko.Spec.EBSOptions.VolumeType != nil {
			if *a.ko.Spec.EBSOptions.VolumeType != *b.ko.Spec.EBSOptions.VolumeType {
				delta.Add("Spec.EBSOptions.VolumeType", a.ko.Spec.EBSOptions.VolumeType, b.ko.Spec.EBSOptions.VolumeType)
			}
		}
	}
	if ackcompare.HasNilDifference(a.ko.Spec.EncryptionAtRestOptions, b.ko.Spec.EncryptionAtRestOptions) {
		delta.Add("Spec.EncryptionAtRestOptions", a.ko.Spec.EncryptionAtRestOptions, b.ko.Spec.EncryptionAtRestOptions)
	} else if a.ko.Spec.EncryptionAtRestOptions != nil && b.ko.Spec.EncryptionAtRestOptions != nil {
		if ackcompare.HasNilDifference(a.ko.Spec.EncryptionAtRestOptions.Enabled, b.ko.Spec.EncryptionAtRestOptions.Enabled) {
			delta.Add("Spec.EncryptionAtRestOptions.Enabled", a.ko.Spec.EncryptionAtRestOptions.Enabled, b.ko.Spec.EncryptionAtRestOptions.Enabled)
		} else if a.ko.Spec.EncryptionAtRestOptions.Enabled != nil && b.ko.Spec.EncryptionAtRestOptions.Enabled != nil {
			if *a.ko.Spec.EncryptionAtRestOptions.Enabled != *b.ko.Spec.EncryptionAtRestOptions.Enabled {
				delta.Add("Spec.EncryptionAtRestOptions.Enabled", a.ko.Spec.EncryptionAtRestOptions.Enabled, b.ko.Spec.EncryptionAtRestOptions.Enabled)
			}
		}
		if ackcompare.HasNilDifference(a.ko.Spec.EncryptionAtRestOptions.KMSKeyID, b.ko.Spec.EncryptionAtRestOptions.KMSKeyID) {
			delta.Add("Spec.EncryptionAtRestOptions.KMSKeyID", a.ko.Spec.EncryptionAtRestOptions.KMSKeyID, b.ko.Spec.EncryptionAtRestOptions.KMSKeyID)
		} else if a.ko.Spec.EncryptionAtRestOptions.KMSKeyID != nil && b.ko.Spec.EncryptionAtRestOptions.KMSKeyID != nil {
			if *a.ko.Spec.EncryptionAtRestOptions.KMSKeyID != *b.ko.Spec.EncryptionAtRestOptions.KMSKeyID {
				delta.Add("Spec.EncryptionAtRestOptions.KMSKeyID", a.ko.Spec.EncryptionAtRestOptions.KMSKeyID, b.ko.Spec.EncryptionAtRestOptions.KMSKeyID)
			}
		}
	}
	if ackcompare.HasNilDifference(a.ko.Spec.EngineVersion, b.ko.Spec.EngineVersion) {
		delta.Add("Spec.EngineVersion", a.ko.Spec.EngineVersion, b.ko.Spec.EngineVersion)
	} else if a.ko.Spec.EngineVersion != nil && b.ko.Spec.EngineVersion != nil {
		if *a.ko.Spec.EngineVersion != *b.ko.Spec.EngineVersion {
			delta.Add("Spec.EngineVersion", a.ko.Spec.EngineVersion, b.ko.Spec.EngineVersion)
		}
	}
	if ackcompare.HasNilDifference(a.ko.Spec.LogPublishingOptions, b.ko.Spec.LogPublishingOptions) {
		delta.Add("Spec.LogPublishingOptions", a.ko.Spec.LogPublishingOptions, b.ko.Spec.LogPublishingOptions)
	} else if a.ko.Spec.LogPublishingOptions != nil && b.ko.Spec.LogPublishingOptions != nil {
		if !reflect.DeepEqual(a.ko.Spec.LogPublishingOptions, b.ko.Spec.LogPublishingOptions) {
			delta.Add("Spec.LogPublishingOptions", a.ko.Spec.LogPublishingOptions, b.ko.Spec.LogPublishingOptions)
		}
	}
	if ackcompare.HasNilDifference(a.ko.Spec.NodeToNodeEncryptionOptions, b.ko.Spec.NodeToNodeEncryptionOptions) {
		delta.Add("Spec.NodeToNodeEncryptionOptions", a.ko.Spec.NodeToNodeEncryptionOptions, b.ko.Spec.NodeToNodeEncryptionOptions)
	} else if a.ko.Spec.NodeToNodeEncryptionOptions != nil && b.ko.Spec.NodeToNodeEncryptionOptions != nil {
		if ackcompare.HasNilDifference(a.ko.Spec.NodeToNodeEncryptionOptions.Enabled, b.ko.Spec.NodeToNodeEncryptionOptions.Enabled) {
			delta.Add("Spec.NodeToNodeEncryptionOptions.Enabled", a.ko.Spec.NodeToNodeEncryptionOptions.Enabled, b.ko.Spec.NodeToNodeEncryptionOptions.Enabled)
		} else if a.ko.Spec.NodeToNodeEncryptionOptions.Enabled != nil && b.ko.Spec.NodeToNodeEncryptionOptions.Enabled != nil {
			if *a.ko.Spec.NodeToNodeEncryptionOptions.Enabled != *b.ko.Spec.NodeToNodeEncryptionOptions.Enabled {
				delta.Add("Spec.NodeToNodeEncryptionOptions.Enabled", a.ko.Spec.NodeToNodeEncryptionOptions.Enabled, b.ko.Spec.NodeToNodeEncryptionOptions.Enabled)
			}
		}
	}
	if !reflect.DeepEqual(a.ko.Spec.TagList, b.ko.Spec.TagList) {
		delta.Add("Spec.TagList", a.ko.Spec.TagList, b.ko.Spec.TagList)
	}
	if ackcompare.HasNilDifference(a.ko.Spec.VPCOptions, b.ko.Spec.VPCOptions) {
		delta.Add("Spec.VPCOptions", a.ko.Spec.VPCOptions, b.ko.Spec.VPCOptions)
	} else if a.ko.Spec.VPCOptions != nil && b.ko.Spec.VPCOptions != nil {
		if !ackcompare.SliceStringPEqual(a.ko.Spec.VPCOptions.SecurityGroupIDs, b.ko.Spec.VPCOptions.SecurityGroupIDs) {
			delta.Add("Spec.VPCOptions.SecurityGroupIDs", a.ko.Spec.VPCOptions.SecurityGroupIDs, b.ko.Spec.VPCOptions.SecurityGroupIDs)
		}
		if !ackcompare.SliceStringPEqual(a.ko.Spec.VPCOptions.SubnetIDs, b.ko.Spec.VPCOptions.SubnetIDs) {
			delta.Add("Spec.VPCOptions.SubnetIDs", a.ko.Spec.VPCOptions.SubnetIDs, b.ko.Spec.VPCOptions.SubnetIDs)
		}
	}

	return delta
}
